# PROJECT CONFIGURATION FILES
# Generated on: Wed Jul  9 21:35:00 CEST 2025
# For Claude Projects upload and caching


=== ./.claude/settings.local.json ===

{
  "permissions": {
    "allow": [
      "WebFetch(domain:firewalld.org)",
      "Bash(mkdir:*)"
    ],
    "deny": []
  }
}
=== ./background/nftables-gui/.github/workflows/python-pytest.yml ===

name: Python Package

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$(pwd)/nftables-frontend" >> $GITHUB_ENV

    - name: List directory contents for debugging
      run: ls -R
      working-directory: nftables-frontend

    - name: Create necessary directories
      run: mkdir -p static/img
      working-directory: nftables-frontend

    - name: Create database directory
      run: mkdir -p instance
      working-directory: nftables-frontend

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      working-directory: nftables-frontend

    - name: Test with pytest
      run: |
        pip install pytest
        pytest
      working-directory: nftables-frontend

=== ./background/nftables-gui/.gitignore ===

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
report.html
report
assets
# C extensions
*.so
# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

=== ./background/nftables-gui/Dockerfile ===

FROM python
LABEL org.opencontainers.image.source=https://github.com/DZ-IO/nftables-gui
LABEL org.opencontainers.image.description="This is a repository to develop a web interface to enble configuration of nftables via GUI. (with docker support)"
LABEL org.opencontainers.image.licenses=GPLV3
COPY . /opt/app
WORKDIR /opt/app/nftables-frontend
RUN pip install \
gunicorn \
flask==3.0.1 \
flask-bootstrap==3.3.7.1 \
flask_sqlalchemy==3.1.1 \
flask-migrate==4.0.7 \
flask-login==0.6.3 \
flask-wtf==1.2.1 \
email_validator \
matplotlib \
python-Levenshtein requests \
&& apt-get update && apt-get install -y nftables \
python3-hug \
python3-nftables \
&& rm -rf /var/cache/* /var/log/* /tmp/*

VOLUME ["/opt/app/nftables-frontend/instance","/opt/app/nftables-frontend/static/img"]

ENTRYPOINT  ["/usr/local/bin/gunicorn","-c","gunicorn.conf.py"]
=== ./background/nftables-gui/nftables-frontend/migrations/alembic.ini ===

# A generic, single database configuration.

[alembic]
# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false


# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic,flask_migrate

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[logger_flask_migrate]
level = INFO
handlers =
qualname = flask_migrate

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

=== ./background/nftables-gui/nftables-frontend/nftables-config.conf ===

<VirtualHost *:8080>
    ServerName www.example.com
    ServerAlias example.com
    DocumentRoot /usr/share/nftables-frontend
    WSGIDaemonProcess nftables-frontend user=www-data group=www-data threads=5
    WSGIScriptAlias / /usr/share/nftables-frontend/run.wsgi
    <Directory /usr/share/nftables-frontend>
        WSGIProcessGroup nftables-frontend
        WSGIApplicationGroup %{GLOBAL}
        Options Indexes FollowSymLinks MultiViews
        AllowOverride All
        Require all granted
    </Directory>
    Alias /static /usr/share/nftables-frontend/static
    <Directory /usr/share/nftables-frontend/static>
        Require all granted
    </Directory>
    Alias /templates /usr/share/nftables-frontend/templates
    <Directory /usr/share/nftables-frontend/templates>
        Require all granted
    </Directory>
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>

=== ./background/nftables-gui/nftables-parser/json_tests/create_rule.json ===


{"json_data": {"nftables":[ {"add": { "rule":{"family": "inet", "table": "filter", "chain": "input",  "expr": [
    {
      "counter": null
    }
  ] }}}]}}
=== ./background/nftables-gui/nftables-parser/json_tests/create_table.json ===

{
  "json_data": {
    "nftables": [
      {
        "add": {
          "table": {
            "family": "inet",
            "name": "my_table"
          }
        }
      }
    ]
  }
}
=== ./background/nftables-gui/nftables-parser/json_tests/delete_table.json ===

{"json_data": {"nftables": [{"delete": {"table":{"name": "table_name", "family": "ip"}}}]}}
=== ./background/nftables-gui/nftables-parser/json_tests/flush_table.json ===

{"json_data": {"nftables": [{"flush": {"table":{"name": "name", "family": "family"}}}]}}

=== ./background/nftables-gui/nftables-parser/json_tests/list_table.json ===

{"json_data": {"nftables": [{"list":{"table":{"name": "nat", "family": "ip"}}}]}}
=== ./background/nftables-gui/requirements.txt ===

flask==3.0.1
flask-bootstrap==3.3.7.1
flask_sqlalchemy==3.1.1
flask-migrate==4.0.7
flask-login==0.6.3
flask-wtf==1.2.1
hug
email_validator
matplotlib
python-Levenshtein
pytest
pytest-sugar
pytest-order
pytest-cov

=== ./background/relianoid/.gitignore ===

/build-pkg
/workdir
/*.deb

=== ./background/relianoid/etc/default/grub.d/relianoid.cfg ===

GRUB_DISTRIBUTOR="RELIANOID ADC Community Edition"
GRUB_CMDLINE_LINUX_DEFAULT="net.ifnames=0 quiet"
GRUB_TERMINAL=console
GRUB_TIMEOUT=10
=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/certificate_csr-create.json ===

{
   "action" : "add",
   "description" : "Create a Certificate Signing Request (CSR file).",
   "method" : "POST",
   "params" : {
      "country" : {
         "description" : "The two-letter ISO code for the country where your organization is localized.",
         "non_blank" : "true",
         "required" : "true"
      },
      "division" : {
         "description" : "The division of your organization handling the certificate.",
         "non_blank" : "true",
         "required" : "true"
      },
      "fqdn" : {
         "description" : "The fully qualified domain name of your server.",
         "format_msg" : "FQDN is not valid. It must be as these examples: domain.com, mail.domain.com, or *.domain.com. Try again.",
         "non_blank" : "true",
         "required" : "true"
      },
      "locality" : {
         "description" : "The city where your organization is located.",
         "non_blank" : "true",
         "required" : "true"
      },
      "mail" : {
         "description" : "An email address used to contact your organization.",
         "non_blank" : "true",
         "required" : "true"
      },
      "name" : {
         "description" : "Certificate ID name.",
         "non_blank" : "true",
         "regex" : "(?^:[a-zA-Z0-9\\-]+)",
         "required" : "true"
      },
      "organization" : {
         "description" : "The legal name of your organization.",
         "non_blank" : "true",
         "required" : "true"
      },
      "state" : {
         "description" : "The state/region where your organization is located.",
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/certificates"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm-action.json ===

{
   "action" : "status",
   "description" : "Apply an action to a farm, see the Request parameters table for actions.",
   "method" : "PUT",
   "params" : {
      "action" : {
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "stop",
            "start",
            "restart"
         ]
      }
   },
   "url" : "/farms/<farmname>/actions"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm-create.json ===

{
   "action" : "create",
   "description" : "It creates a new farm.",
   "method" : "POST",
   "params" : {
      "copy_from" : {
         "description" : "This parameter expects the name of a farm that exists. If this parameter is sent, the farm is copied from the farm specified in it. The farmname, vip and vport values will be overwritten.",
         "format_msg" : "The farm name accepts alphabet letters, numbers or hypens (-).",
         "non_blank" : "true",
         "regex" : "(?^:[a-zA-Z0-9\\-]+)",
         "required" : "false"
      },
      "farmname" : {
         "description" : "Farm descriptive name. It is used as a unique identifier.",
         "exceptions" : [
            "0"
         ],
         "format_msg" : "The farm name accepts alphabet letters, numbers or hypens (-).",
         "non_blank" : "true",
         "regex" : "(?^:[a-zA-Z0-9\\-]+)",
         "required" : "true"
      },
      "profile" : {
         "description" : "The profile of the created Farm. For HTTP farms is http.",
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "http",
            "gslb",
            "l4xnat",
            "datalink",
            "eproxy"
         ]
      },
      "vip" : {
         "description" : "IP of the farm, where the virtual service is going to run. The indicated IP must be configured in the system and UP",
         "dyn_values" : "true",
         "required" : "true"
      },
      "vport" : {
         "depend_on" : "profile != datalink",
         "depend_on_msg" : "Mandatory if the profile is not datalink, else it is not expected",
         "description" : "Port of the farm where the virtual service is going to listen. The same virtual port and virtual IP must not be in use by another farm.",
         "format_msg" : "It expects a port number or multiport value for L4xnat farms",
         "non_blank" : "true",
         "regex" : "(?^:(?:\\*|(?:(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))|(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))\\:(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])))(?:,(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))|,(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))\\:(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])))*))"
      }
   },
   "url" : "/farms"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_certificate-add.json ===

{
   "action" : "add",
   "description" : "Include an available PEM Certificate to the SNI list or certlist array of an HTTP farm with an HTTPS listener.",
   "method" : "POST",
   "params" : {
      "file" : {
         "non_blank" : "true",
         "regex" : "(?^:(?^:(?:\\*[_|\\.])?\\w[\\w\\.\\(\\)\\@ \\-]*)\\.pem)",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/certificates"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_datalink-modify.json ===

{
   "action" : "set",
   "description" : "Modify the configuration of a datalink farm.",
   "method" : "PUT",
   "params" : {
      "algorithm" : {
         "non_blank" : "true",
         "values" : [
            "prio",
            "weight"
         ]
      },
      "newfarmname" : {
         "exceptions" : [
            "0"
         ],
         "non_blank" : "true",
         "regex" : "(?^:[a-zA-Z0-9\\-]+)"
      },
      "vip" : {
         "dyn_values" : "true",
         "format_msg" : "expects an IP",
         "non_blank" : "true"
      }
   },
   "url" : "/farm/<farmname>"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_datalink_service_backend-add.json ===

{
   "action" : "add",
   "description" : "Create a new Backend in a given datalink Farm.",
   "method" : "POST",
   "params" : {
      "interface" : {
         "non_blank" : "true",
         "required" : "true"
      },
      "ip" : {
         "format_msg" : "expects an IP",
         "non_blank" : "true",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))",
         "required" : "true"
      },
      "priority" : {
         "interval" : "1,9"
      },
      "weight" : {
         "interval" : "1,9"
      }
   },
   "url" : "/farms/<farmname>/backends"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_datalink_service_backend-modify.json ===

{
   "action" : "set",
   "description" : "Modify the parameters of a backend in for a datalink Farm. id is the backend unique identifier.",
   "method" : "PUT",
   "params" : {
      "interface" : {
         "non_blank" : "true"
      },
      "ip" : {
         "format_msg" : "expects an IP",
         "non_blank" : "true",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "priority" : {
         "interval" : "1,9"
      },
      "weight" : {
         "interval" : "1,9"
      }
   },
   "url" : "/farms/<farmname>/backends/<id>"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http-modify.json ===

{
   "action" : "set",
   "description" : "Modify the configuration of a http farm.",
   "method" : "PUT",
   "params" : {
      "certname" : {
         "depend_on" : "listener==https",
         "description" : "",
         "non_blank" : "true",
         "regex" : "(?^:(?^:(?:\\*[_|\\.])?\\w[\\w\\.\\(\\)\\@ \\-]*)\\.(?:pem|csr))"
      },
      "cipherc" : {
         "depend_on" : "listener==https, ciphers==customsecurity",
         "description" : "This is the allowed customized list of ciphers that will be accepted by the SSL connection, which it’s a string in the same format as in OpenSSL ciphers.",
         "non_blank" : "true"
      },
      "ciphers" : {
         "depend_on" : "listener==https",
         "description" : "It is used to build a list of ciphers accepted by SSL connections in order to harden the SSL connection.",
         "non_blank" : "true",
         "values" : [
            "all",
            "highsecurity",
            "customsecurity",
            "ssloffloading"
         ]
      },
      "contimeout" : {
         "description" : "How long the farm is going to wait for a connection to the backend in seconds.",
         "format_msg" : "expects a natural number",
         "non_blank" : "true",
         "regex" : "(?^:[1-9]\\d*)"
      },
      "disable_sslv2" : {
         "depend_on" : "listener==https",
         "description" : "Only in https listener. If this field has the value true the connections using an SSL security protocol with version 2 is not allowed; or false if the protocol SSLv2 is allowed.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "disable_sslv3" : {
         "depend_on" : "listener==https",
         "description" : "Only in https listener. If this field has the value true the connections using an SSL security protocol with version 3 is not allowed; or false if the protocol SSLv3 is allowed.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "disable_tlsv1" : {
         "depend_on" : "listener==https",
         "description" : "Only in https listener. If this field has the value true the connections using TLS security protocol with version 1 is not allowed; or false if the protocol TLSv1 is allowed.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "disable_tlsv1_1" : {
         "depend_on" : "listener==https",
         "description" : "Only in https listener. If this field has the value true the connections using TLS security protocol with version 1.1 is not allowed; or false if the protocol TLSv1.1 is allowed.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "disable_tlsv1_2" : {
         "depend_on" : "listener==https",
         "description" : "Only in https listener. If this field has the value true the connections using TLS security protocol with version 1.2 is not allowed; or false if the",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "error414" : {
         "description" : "",
         "required" : "false"
      },
      "error500" : {
         "description" : "Personalized message error 500.",
         "required" : "false"
      },
      "error501" : {
         "description" : "Personalized message error 501.",
         "required" : "false"
      },
      "error503" : {
         "description" : "Personalized message error 503.",
         "required" : "false"
      },
      "errorWAF" : {
         "description" : "Personalized message error 414.",
         "edition" : "ee"
      },
      "httpverb" : {
         "description" : "This field indicates the operations that will be permitted to the HTTP client requests. available values are: standardHTTP, accepted HTTP requests GET, POST, HEAD. extendedHTTP, accepted previous HTTP requests plus PUT,DELETE. optionsHTTP (from 4.0.1), add the OPTIONS verb to the previous ones. standardWebDAV, accepted previous HTTP requests plus LOCK, UNLOCK, PROPFIND, PROPPATCH, SEARCH, MKCOL, MOVE, COPY, OPTIONS, TRACE, MKACTIVITY, CHECKOUT, MERGE, REPORT, MSextWebDAV accepted previous HTTP requests plus SUBSCRIBE, UNSUBSCRIBE, NOTIFY, BPROPFIND, BPROPPATCH, POLL, BMOVE, BCOPY, BDELETE, CONNECT, or MSRPCext, accepted previous HTTP requests plus RPC_IN_DATA, RPC_OUT_DATA. Note that those values are case-sensitive.",
         "non_blank" : "true",
         "values" : [
            "standardHTTP",
            "extendedHTTP",
            "standardWebDAV",
            "MSextWebDAV",
            "MSRPCext",
            "optionsHTTP"
         ]
      },
      "ignore_100_continue" : {
         "description" : "If this field has the value true the 100 continue HTTP header will be ignored; if the value is false, the 100 continue header will be processed.",
         "edition" : "ee",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "listener" : {
         "description" : "A listener defines how the farm is going to play with the requests from the clients. The options are: http for not secured protocol or https for secured protocol.",
         "non_blank" : "true",
         "values" : [
            "http",
            "https"
         ]
      },
      "logs" : {
         "description" : "The farm Logs the trace of the HTTP connections. If this parameter has the value true, the logs are enabled; if it has the value false, logs are disabled.",
         "edition" : "ee",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "newfarmname" : {
         "depend_on" : "status==down",
         "depend_on_msg" : "The farm must be stopped.",
         "description" : "The ne farm name",
         "exceptions" : [
            "0"
         ],
         "non_blank" : "true",
         "regex" : "(?^:[a-zA-Z0-9\\-]+)"
      },
      "reqtimeout" : {
         "description" : "How long the farm is going to wait for a client request in seconds.",
         "format_msg" : "expects a natural number",
         "non_blank" : "true",
         "regex" : "(?^:[1-9]\\d*)"
      },
      "restimeout" : {
         "description" : "How long the farm is going to wait for a response from the backends in seconds.",
         "format_msg" : "expects a natural number",
         "non_blank" : "true",
         "regex" : "(?^:[1-9]\\d*)"
      },
      "resurrectime" : {
         "description" : "This value in seconds is the period to get out a blacklisted backend and checks if it is alive.",
         "format_msg" : "expects a natural number",
         "non_blank" : "true",
         "regex" : "(?^:[1-9]\\d*)"
      },
      "rewritelocation" : {
         "description" : "If it is enabled, the farm is forced to modify the Location: and Content-location: headers in responses to clients with the virtual host. The options are: enabled activated; disabled inactivated; or enabled-backends only the backend address is compared.",
         "non_blank" : "true",
         "values" : [
            "disabled",
            "enabled",
            "enabled-backends",
            "enabled-path",
            "enabled-backends-path"
         ]
      },
      "vip" : {
         "description" : "IP of the farm, where the virtual service is listening, this IP must be configured and up in the system.",
         "format_msg" : "expects an IP",
         "non_blank" : "true",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "vport" : {
         "description" : "Port of the farm, where the virtual service is listening.",
         "interval" : "1,65535",
         "non_blank" : "true"
      }
   },
   "url" : "/farm/<farmname>"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_header_request_add-create.json ===

{
   "action" : "add",
   "description" : "The farm will add the header to the backend request.",
   "method" : "POST",
   "params" : {
      "header" : {
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/addheader"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_header_request_add-modify.json ===

{
   "action" : "modify",
   "description" : "The farm will add the header to the backend request.",
   "method" : "PUT",
   "params" : {
      "header" : {
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/addheader/<id>"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_header_request_remove-create.json ===

{
   "action" : "add",
   "description" : "Remove certain headers from the incoming requests.",
   "method" : "POST",
   "params" : {
      "pattern" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/headremove"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_header_request_remove-modify.json ===

{
   "action" : "modify",
   "description" : "Remove certain headers from the incoming requests.",
   "method" : "PUT",
   "params" : {
      "pattern" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/headremove"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_header_request_replace-create.json ===

{
   "action" : "add",
   "description" : "Add rules to rewrite headers from the request.",
   "method" : "POST",
   "params" : {
      "header" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      },
      "match" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      },
      "replace" : {
         "negated_regex" : "(?^:\\n)",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/replacerequestheader"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_header_request_replace-modify.json ===

{
   "action" : "add",
   "description" : "Add rules to rewrite headers from the request.",
   "method" : "POST",
   "params" : {
      "header" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true"
      },
      "match" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true"
      },
      "replace" : {
         "negated_regex" : "(?^:\\n)"
      }
   },
   "url" : "/farms/<farmname>/replacerequestheader"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_header_request_replace-move.json ===

{
   "action" : "add",
   "description" : "Move a ReplaceHeader",
   "method" : "POST",
   "params" : {
      "position" : {
         "non_blank" : "true",
         "regex" : "(?^:\\d+)",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/replacerequestheader/<id>/actions"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_header_response_add-create.json ===

{
   "action" : "add",
   "description" : "The farm will add the header to the backend response.",
   "method" : "POST",
   "params" : {
      "header" : {
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/addresponseheader"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_header_response_add-modify.json ===

{
   "action" : "add",
   "description" : "The farm will add the header to the backend response.",
   "method" : "POST",
   "params" : {
      "header" : {
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/addresponseheader"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_header_response_remove-create.json ===

{
   "action" : "add",
   "description" : "Remove certain headers from the backend response.",
   "method" : "POST",
   "params" : {
      "pattern" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/removeresponseheader"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_header_response_remove-modify.json ===

{
   "action" : "add",
   "description" : "Remove certain headers from the backend response.",
   "method" : "POST",
   "params" : {
      "pattern" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/removeresponseheader"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_header_response_replace-create.json ===

{
   "action" : "add",
   "description" : "Add rules to rewrite headers from the response.",
   "method" : "POST",
   "params" : {
      "header" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      },
      "match" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      },
      "replace" : {
         "negated_regex" : "(?^:\\n)",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/replaceresponseheader"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_header_response_replace-modify.json ===

{
   "action" : "add",
   "description" : "Add rules to rewrite headers from the response.",
   "method" : "POST",
   "params" : {
      "header" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true"
      },
      "match" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true"
      },
      "replace" : {}
   },
   "url" : "/farms/<farmname>/replaceresponseheader"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_header_response_replace-move.json ===

{
   "action" : "add",
   "description" : "Move a ReplaceHeader",
   "method" : "POST",
   "params" : {
      "position" : {
         "non_blank" : "true",
         "regex" : "(?^:\\d+)",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/replaceresponseheader/<id>/actions"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_service-create.json ===

{
   "action" : "add",
   "description" : "Create a service in a given HTTP profile Farm.",
   "method" : "POST",
   "params" : {
      "id" : {
         "exceptions" : [
            "0"
         ],
         "non_blank" : "true",
         "regex" : "(?^:[a-zA-Z0-9\\-]+)"
      }
   },
   "url" : "/farms/<farmname>/services"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_service-modify.json ===

{
   "action" : "set",
   "description" : "Modify the parameters of a service in an HTTP profile.",
   "method" : "PUT",
   "params" : {
      "cookiedomain" : {
         "edition" : "ee"
      },
      "cookieinsert" : {
         "edition" : "ee",
         "values" : [
            "true",
            "false"
         ]
      },
      "cookiename" : {
         "edition" : "ee"
      },
      "cookiepath" : {
         "edition" : "ee"
      },
      "cookiettl" : {
         "edition" : "ee",
         "non_blank" : "true",
         "regex" : "(?^:[1-9]\\d*)"
      },
      "httpsb" : {
         "non_blank" : "true",
         "regex" : "(?^:(?:true|false))"
      },
      "leastresp" : {
         "non_blank" : "true",
         "regex" : "(?^:(?:true|false))"
      },
      "persistence" : {
         "non_blank" : "false",
         "values" : [
            "IP",
            "BASIC",
            "NONE",
            "URL",
            "PARM",
            "COOKIE",
            "HEADER"
         ]
      },
      "pinnedconnection" : {
         "non_blank" : "true",
         "values" : [
            0,
            1
         ]
      },
      "redirect" : {
         "non_blank" : "false",
         "regex" : "(?^:(http|https)://([^/]+)(.*))"
      },
      "redirect_code" : {
         "edition" : "ee",
         "values" : [
            301,
            302,
            307
         ]
      },
      "redirecttype" : {
         "values" : [
            "default",
            "append"
         ]
      },
      "rewritelocation" : {
         "non_blank" : "true",
         "values" : [
            "disabled",
            "enabled",
            "enabled-backends",
            "enabled-path",
            "enabled-backends-path"
         ]
      },
      "routingpolicy" : {
         "non_blank" : "true",
         "values" : [
            "ROUND_ROBIN",
            "LEAST_CONNECTIONS",
            "RESPONSE_TIME",
            "PENDING_CONNECTIONS"
         ]
      },
      "sessionid" : {},
      "sts_status" : {
         "edition" : "ee",
         "values" : [
            "true",
            "false"
         ]
      },
      "sts_timeout" : {
         "edition" : "ee",
         "regex" : "(?^:(?:\\d+))"
      },
      "ttl" : {
         "non_blank" : "true",
         "regex" : "(?^:[1-9]\\d*)"
      },
      "urlp" : {
         "is_regex" : "true"
      },
      "vhost" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:^\\^)"
      }
   },
   "url" : "/farms/<farmname>/services/<id>"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_service_backend-add.json ===

{
   "action" : "add",
   "description" : "Create a new Backend in a given HTTP profile. id is the service unique identifier.",
   "method" : "POST",
   "params" : {
      "connection_limit" : {
         "depend_on" : "proxy_ng==true",
         "interval" : "0,"
      },
      "ip" : {
         "format_msg" : "expects an IP",
         "non_blank" : "true",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))",
         "required" : "true"
      },
      "port" : {
         "non_blank" : "true",
         "regex" : "(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))",
         "required" : "true"
      },
      "priority" : {
         "depend_on" : "proxy_ng==true",
         "interval" : "1,9"
      },
      "timeout" : {
         "regex" : "(?^:[1-9]\\d*)"
      },
      "weight" : {
         "interval" : "1,9"
      }
   },
   "url" : "/farms/<farmname>/services/<id>/backends"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_service_backend-maintenance.json ===

{
   "action" : "maintenance",
   "description" : "Set a given action in a backend of an HTTP farm.",
   "method" : "PUT",
   "params" : {
      "action" : {
         "depend_on_msg" : "The farm cannot be in need_restart status to set maintenance",
         "non_blank" : "true",
         "values" : [
            "up",
            "maintenance"
         ]
      },
      "mode" : {
         "depend_on" : "action==maintenance",
         "non_blank" : "true",
         "values" : [
            "drain",
            "cut"
         ]
      }
   },
   "url" : "/farms/<farmname>/services/<id>/backends/<id>/maintenance"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_service_backend-modify.json ===

{
   "action" : "set",
   "description" : "Modify the parameters of a backend HTTP service.",
   "method" : "PUT",
   "params" : {
      "connection_limit" : {
         "depend_on" : "proxy_ng==true",
         "interval" : "0,"
      },
      "ip" : {
         "format_msg" : "expects an IP",
         "non_blank" : "true",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "port" : {
         "non_blank" : "true",
         "regex" : "(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))"
      },
      "priority" : {
         "depend_on" : "proxy_ng==true",
         "interval" : "1,9"
      },
      "timeout" : {
         "regex" : "(?^:[1-9]\\d*)"
      },
      "weight" : {
         "interval" : "1,9"
      }
   },
   "url" : "/farms/<farmname>/services/<id>/backends/<id>"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_service_url_rewrite-create.json ===

{
   "action" : "add",
   "description" : "It checks a pattern in order to get strings from URL and replace them.",
   "method" : "POST",
   "params" : {
      "last" : {
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "pattern" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      },
      "replace" : {
         "negated_regex" : "(?^:\\n)",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/service/<servicename>/rewriteurl"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_service_url_rewrite-modify.json ===

{
   "action" : "add",
   "description" : "It checks a pattern in order to get strings from URL and replace them.",
   "method" : "POST",
   "params" : {
      "last" : {
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "pattern" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true"
      },
      "replace" : {
         "negated_regex" : "(?^:\\n)"
      }
   },
   "url" : "/farms/<farmname>/service/<servicename>/rewriteurl"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_http_service_url_rewrite-move.json ===

{
   "action" : "move",
   "description" : "It checks a pattern in order to get strings from URL and replace them.",
   "method" : "POST",
   "params" : {
      "position" : {
         "non_blank" : "true",
         "regex" : "(?^:\\d+)",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/service/<servicename>/rewriteurl/<id>/actions"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_l4xnat-modify.json ===

{
   "action" : "set",
   "description" : "Modify the configuration of a l4xnat farm.",
   "method" : "PUT",
   "params" : {
      "algorithm" : {
         "non_blank" : "true",
         "values" : [
            "weight",
            "roundrobin",
            "hash_srcip_srcport",
            "hash_srcip",
            "symhash",
            "leastconn"
         ]
      },
      "logs" : {
         "edition" : "ee",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "nattype" : {
         "non_blank" : "true",
         "values" : [
            "nat",
            "dnat",
            "dsr",
            "stateless_dnat"
         ]
      },
      "newfarmname" : {
         "exceptions" : [
            "0"
         ],
         "non_blank" : "true",
         "regex" : "(?^:[a-zA-Z0-9\\-]+)"
      },
      "persistence" : {
         "values" : [
            "ip",
            "srcip",
            "srcport",
            "srcmac",
            "srcip_srcport",
            "srcip_dstport",
            "none"
         ]
      },
      "protocol" : {
         "non_blank" : "true",
         "values" : [
            "all",
            "tcp",
            "udp",
            "sctp",
            "sip",
            "ftp",
            "tftp",
            "amanda",
            "h323",
            "irc",
            "netbios-ns",
            "pptp",
            "sane",
            "snmp"
         ]
      },
      "ttl" : {
         "non_blank" : "true",
         "regex" : "(?^:[1-9]\\d*)"
      },
      "vip" : {
         "dyn_values" : "true",
         "format_msg" : "The vip IP must exist in some interface.",
         "non_blank" : "true"
      },
      "vport" : {
         "non_blank" : "true"
      }
   },
   "url" : "/farm/<farmname>"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_l4xnat_service_backend-add.json ===

{
   "action" : "add",
   "description" : "Create a new Backend in a given L4xNAT Farm.",
   "method" : "POST",
   "params" : {
      "ip" : {
         "format_msg" : "expects an IP",
         "non_blank" : "true",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))",
         "required" : "true"
      },
      "max_conns" : {
         "interval" : "0,"
      },
      "port" : {
         "format_msg" : "expects a port or port range",
         "regex" : "(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))"
      },
      "priority" : {
         "interval" : "1,9"
      },
      "weight" : {
         "interval" : "1,9"
      }
   },
   "url" : "/farms/<farmname>/backends"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_l4xnat_service_backend-maintenance.json ===

{
   "action" : "maintenance",
   "description" : "Set a given action in a backend of an L4xNAT farm.",
   "method" : "PUT",
   "params" : {
      "action" : {
         "non_blank" : "true",
         "values" : [
            "up",
            "maintenance"
         ]
      },
      "mode" : {
         "depend_on" : "action==maintenance",
         "non_blank" : "true",
         "values" : [
            "drain",
            "cut"
         ]
      }
   },
   "url" : "/farms/<farmname>/backends/<id>/maintenance"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farm_l4xnat_service_backend-modify.json ===

{
   "action" : "set",
   "description" : "Modify the parameters of a backend in for a L4xNAT Farm. id is the backend unique identifier.",
   "method" : "PUT",
   "params" : {
      "interface" : {
         "non_blank" : "true"
      },
      "ip" : {
         "format_msg" : "expects an IP",
         "non_blank" : "true",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "max_conns" : {
         "interval" : "0,"
      },
      "port" : {
         "regex" : "(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))"
      },
      "priority" : {
         "interval" : "1,9"
      },
      "weight" : {
         "interval" : "1,9"
      }
   },
   "url" : "/farms/<farmname>/backends/<id>"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farmguardian-create.json ===

{
   "action" : "create",
   "description" : "Create a monitoring check to evaluate the farm service status.",
   "method" : "POST",
   "params" : {
      "copy_from" : {
         "regex" : "(?^:[\\w-]+)"
      },
      "name" : {
         "exceptions" : [
            "0"
         ],
         "non_blank" : "true",
         "regex" : "(?^:[\\w-]+)",
         "required" : "true"
      }
   },
   "url" : "/monitoring/fg"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farmguardian-modify.json ===

{
   "action" : "set",
   "description" : "Modify the parameters of the health check",
   "method" : "PUT",
   "params" : {
      "backend_alias" : {
         "non_blank" : "false",
         "values" : [
            "true",
            "false"
         ]
      },
      "command" : {
         "non_blank" : "true"
      },
      "cut_conns" : {
         "non_blank" : "false",
         "values" : [
            "true",
            "false"
         ]
      },
      "description" : {
         "non_blank" : "true"
      },
      "force" : {
         "non_blank" : "false",
         "values" : [
            "true",
            "false"
         ]
      },
      "interval" : {
         "regex" : "(?^:[1-9]\\d*)"
      },
      "log" : {
         "non_blank" : "false",
         "values" : [
            "true",
            "false"
         ]
      },
      "timeout" : {
         "regex" : "(?^:[1-9]\\d*)"
      }
   },
   "url" : "/monitoring/fg/<name>"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/farmguardian_to_farm-add.json ===

{
   "action" : "add",
   "description" : "Apply a FarmGuardian to a service.",
   "method" : "POST",
   "params" : {
      "name" : {
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/services/<id>/fg"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/gateway-modify.json ===

{
   "action" : "set",
   "description" : "Modify the configuration of the gateway interface.",
   "method" : "PUT",
   "params" : {
      "address" : {
         "non_blank" : "true",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "interface" : {
         "non_blank" : "true"
      }
   },
   "url" : "/interfaces/gateway/<ip_version>"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/letsencrypt-action.json ===

{
   "action" : "action",
   "description" : "Apply an action in a Letsencrypt certificate by first domain.",
   "method" : "POST",
   "params" : {
      "action" : {
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "renew"
         ]
      },
      "farmname" : {
         "description" : "Farm name which a temporal Service “LetsEncryptTemporalFarm” is configured in. Required if param vip is not sent.",
         "dyn_values" : "true",
         "non_blank" : "true"
      },
      "force_renewal" : {
         "description" : "true, force the certificate to be renewed even it is not expired, false, the certificate will be renewed if it is due to be renewed ( less than 30 days to expire ).",
         "values" : [
            "true",
            "false"
         ]
      },
      "restart" : {
         "description" : "true, all the farms using the certificate will be restarted. false, no farms using the certificate will be restarted.",
         "values" : [
            "true",
            "false"
         ]
      },
      "vip" : {
         "description" : "IP of the system, where a temporal Farm “LetsEncryptTemporalFarm” is configured. Required true if param vip is not sent.",
         "dyn_values" : "true",
         "non_blank" : "true"
      }
   },
   "url" : "/certificates/letsencrypt/<domain>/actions"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/letsencrypt-create.json ===

{
   "action" : "renew",
   "description" : "Create a new Letsencrypt certificate.",
   "method" : "POST",
   "params" : {
      "domains" : {
         "description" : "List of domains which the certificate is vaild for.",
         "ref" : "ARRAY",
         "required" : "true"
      },
      "farmname" : {
         "description" : "Farm name which a temporal Service Letsencryptz is configured in.",
         "dyn_values" : "true",
         "non_blank" : "true"
      },
      "force" : {
         "description" : "This parameter is used get a confirmation before creating a certificate.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "test" : {
         "description" : "true, the certificate is issued by LetsEncrypt Staging Server. false, the certificate is issued by LetsEncrypt Server and it will valid for Production environment.",
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "vip" : {
         "description" : "IP of the system, where a temporal Farm Letsencryptz is configured.",
         "dyn_values" : "true",
         "non_blank" : "true"
      }
   },
   "url" : "/certificates/letsencrypt"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/letsencrypt-modify.json ===

{
   "action" : "set",
   "description" : "Modify the Auto Renewal parameters of a Letsencrypt certificate.",
   "method" : "PUT",
   "params" : {
      "autorenewal" : {
         "description" : "true,the autorenewal will be configured.false, the autorenewal will be removed.",
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "farmname" : {
         "depend_on" : "autorenewal==true && vip!=defined",
         "description" : "Farm name which a temporal Service “LetsEncryptTemporalFarm” is configured in. Required if param vip is not sent.",
         "dyn_values" : "true",
         "non_blank" : "true"
      },
      "force_renewal" : {
         "depend_on" : "autorenewal==true",
         "description" : "true, force the certificate to be renewed even it is not expired, false, the certificate will be renewed if it is due to be renewed ( less than 30 days to expire ).",
         "required" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "restart" : {
         "depend_on" : "autorenewal==true",
         "description" : "true, all the farms using the certificate will be restarted. false, no farms using the certificate will be restarted.",
         "required" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "vip" : {
         "depend_on" : "autorenewal==true && farmname!=defined",
         "description" : "IP of the system, where a temporal Farm “LetsEncryptTemporalFarm” is configured. Required true if param vip is not sent.",
         "dyn_values" : "true",
         "non_blank" : "true"
      }
   },
   "url" : "/certificates/letsencrypt/<domain>"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/letsencrypt_config-modify.json ===

{
   "action" : "set",
   "description" : "Modify Letsencrypt Configuration.",
   "method" : "PUT",
   "params" : {
      "email" : {
         "description" : "Email for use as a contact in Letsencrypt",
         "non_blank" : "true",
         "regex" : "(?^:^(?:[a-zA-Z][\\w\\_\\.]+)\\@(?:[a-zA-Z0-9.-]+)\\.(?:[a-zA-Z]{2,4})$)",
         "required" : "true"
      }
   },
   "url" : "/certificates/letsencrypt/config"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/nic-action.json ===

{
   "action" : "status",
   "description" : "Apply an action to a NIC interface. This call lets enable or disable a network interface.",
   "method" : "POST",
   "params" : {
      "action" : {
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "up",
            "down"
         ]
      }
   },
   "url" : "/interfaces/nic/<name>/actions"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/nic-modify.json ===

{
   "action" : "set",
   "description" : "Modify the parameters of a NIC interface. name is the interface unique identifier.",
   "method" : "PUT",
   "params" : {
      "dhcp" : {
         "edition" : "ee",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "force" : {
         "non_blank" : "true",
         "values" : [
            "true"
         ]
      },
      "gateway" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "ip" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "netmask" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?:[0-9]{1,2}|10[0-9]|11[0-9]|12[0-8])))"
      }
   },
   "url" : "/interfaces/nic/<name>"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/system_backup-create.json ===

{
   "action" : "create",
   "description" : "Create a system configuration backup of the current configuration.",
   "method" : "POST",
   "params" : {
      "name" : {
         "description" : "It is the file name used as a unique identifier. The file extension is .tar.gz.",
         "non_blank" : "true",
         "regex" : "(?^:[\\w-]+)",
         "required" : "true"
      }
   },
   "url" : "/system/backup"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/system_backup-restore.json ===

{
   "action" : "apply",
   "description" : "Restore the configuration from a backup file. Name is the backup unique identifier.",
   "method" : "POST",
   "params" : {
      "action" : {
         "description" : "To restore the backup configuration, the value must be apply.",
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "apply"
         ]
      },
      "force" : {
         "description" : "This parameter is used get a confirmation before applying the backup.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      }
   },
   "url" : "/system/backup/<name>/actions"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/system_dns-modify.json ===

{
   "action" : "set",
   "description" : "Modify the DNS service configuration.",
   "method" : "POST",
   "params" : {
      "primary" : {
         "description" : "Primary DNS configurated in the system.",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "secondary" : {
         "description" : "Secondary DNS configurated in the system.",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      }
   },
   "url" : "/system/dns"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/system_factory-apply.json ===

{
   "action" : "factory",
   "description" : "Apply a factory reset in the system. It will delete all the user configuration. The root password, the hostname, one NIC interface and the certificate will not be modified. The system will be restarted while the process is going on.",
   "method" : "POST",
   "params" : {
      "force" : {
         "description" : "It is a confirmation about to apply the factory reset. This parameter has to be sent with true value for applying it.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "interface" : {
         "description" : "It is a NIC interface name. This interface will not be deleted in the factory reset process. The system will be available before factory reset through this interface.",
         "dyn_values" : "true",
         "non_blank" : "true",
         "required" : "true"
      },
      "remove_backups" : {
         "description" : "It is an option about remove all system backups. They will not be removed by default. If this parameter is set to true, the backups will be removed.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      }
   },
   "url" : "/system/factory"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/system_global-modify.json ===

{
   "action" : "set",
   "description" : "Modify RELIANOID global Settings.",
   "method" : "POST",
   "params" : {
      "arp_announce" : {
         "description" : "If this parameter is enabled true, the master node of the cluster will send a ARP packet to the network per minute and when the system boots. If the value is false the packet will be sent only when cluster switches to master or when a interface will be configurated.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "duplicated_network" : {
         "description" : "If this parameter is enabled true, the system will able to manage networks duplicated in different interfaces, a process will ensure that an interface does not route through another with the same netwoking. This can be disabled with the value false.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "force" : {
         "description" : "This parameter is used to force the settings when these require a service restart. This parameter accepts the value true.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "ssyncd" : {
         "description" : "Session synchronization daemon is which replies the client sessions between master and backup nodes for a cluster. This feature is enabled with the value true and disabled with false.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "waf_assistant" : {
         "description" : "If this parameter is enabled true, the system will assist the user with WAF settings of the farms.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      }
   },
   "url" : "/system/global"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/system_language-modify.json ===

{
   "action" : "factory",
   "description" : "Modify the WebGUI language.",
   "method" : "POST",
   "params" : {
      "language" : {
         "description" : "string with the language used in webgui.",
         "required" : "true"
      }
   },
   "url" : "/system/factory"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/system_ntp-modify.json ===

{
   "action" : "set",
   "description" : "Modify the NTP service configuration.",
   "method" : "POST",
   "params" : {
      "server" : {
         "description" : "Server where NTP client does the requests.",
         "non_blank" : "true",
         "regex" : "(?^:[\\w\\.\\-]+)",
         "required" : "true"
      }
   },
   "url" : "/system/ntp"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/system_proxy-modify.json ===

{
   "action" : "set",
   "description" : "Show the configuration about HTTP/HTTPS remote services. This proxy will be used to the remote HTTP request from the load balancer (as downloading IPDS rules and getting packages updates).",
   "method" : "POST",
   "params" : {
      "http_proxy" : {
         "description" : "It is the URL to the remote proxy server to send the requests that use the HTTP protocol, without SSL encryption.",
         "regex" : "(?^:\\S*)"
      },
      "https_proxy" : {
         "description" : "It is the URL to the remote proxy server to send the requests that use the HTTPS protocol, with SSL encryption.",
         "regex" : "(?^:\\S*)"
      }
   },
   "url" : "/system/proxy"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/system_snmp-modify.json ===

{
   "action" : "set",
   "description" : "Modify the SNMP service configuration.",
   "method" : "POST",
   "params" : {
      "community" : {
         "description" : "Community name. Read-Only Community used.",
         "length" : 32,
         "non_blank" : "true"
      },
      "ip" : {
         "description" : "Interface IP where the SNMP service is running. It’s safe to keep the All interfaces enabled using the character *.",
         "dyn_values" : "true",
         "non_blank" : "true"
      },
      "port" : {
         "description" : "Port where SNMP service is running.",
         "non_blank" : "true",
         "regex" : "(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))"
      },
      "scope" : {
         "description" : "IP or subnet with access (IP/bit). Allowed client IPs to access SNMPD service, in case you want to allow access only one IP please use the bit /32.",
         "non_blank" : "true",
         "regex" : "(?^:(?:\\d{1,3}\\.){3}\\d{1,3}\\/\\d{1,2})"
      },
      "status" : {
         "description" : "Status of SNMP service. The possible values are: true, the service is running; or false, the service is stopped.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      }
   },
   "url" : "/system/snmp"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/system_ssh-modify.json ===

{
   "action" : "set",
   "description" : "Modify the SSH service configuration.",
   "method" : "POST",
   "params" : {
      "listen" : {
         "description" : "IP of the system where the SSH service is listening. The character * is used to listen in all configurated IPs. Enabled to set an array to configure multiple ips.",
         "non_blank" : "true",
         "ref" : "array|none",
         "regex" : "(?^:(?:(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))|\\*))"
      },
      "port" : {
         "description" : "Port configurated for SSH service. Enabled to set an array to configure multiple ports.",
         "non_blank" : "true",
         "ref" : "array|none",
         "regex" : "(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))"
      }
   },
   "url" : "/system/ssh"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/system_user-modify.json ===

{
   "action" : "set",
   "description" : "Modify the configuration of the current user. The current user is authenticated with the API_KEY or logged in the WebGUI.",
   "method" : "POST",
   "params" : {
      "api_key" : {
         "description" : "Each user can have an API key. With this API key, the user can do action through the API key with the permissions of the user’s role.",
         "regex" : "(?^:[a-zA-Z0-9]+)"
      },
      "api_permissions" : {
         "description" : "The possible values are: true, to enable the access to the load balancer through the API; or false, to deny the access through the API.",
         "non_blank" : "true",
         "regex" : "(?^:(?:true|false))"
      },
      "newpassword" : {
         "description" : "New user password to access through the WebGUI.",
         "format_msg" : "must contain at least a letter and a number and a minimum length of 8 characters.",
         "non_blank" : "true",
         "regex" : "(?^:(?=.*[0-9])(?=.*[a-zA-Z]).{8,512})"
      },
      "password" : {
         "description" : "It is the current user password. It is required when newpassword is sent.",
         "non_blank" : "true"
      },
      "zapi_permissions" : {
         "description" : "The possible values are: true, to enable the access to the load balancer through the API; or false, to deny the access through the API. This parameter is deprecated and it will be removed, use `api_permissions` instead.",
         "non_blank" : "true",
         "regex" : "(?^:(?:true|false))"
      },
      "zapikey" : {
         "description" : "Each user can have an API key. With this API key, the user can do action through the API key with the permissions of the user’s role. This parameter is deprecated and it will be removed, use `api_key` instead.",
         "regex" : "(?^:[a-zA-Z0-9]+)"
      }
   },
   "url" : "/system/users"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/virtual-action.json ===

{
   "action" : "status",
   "description" : "Apply an action to a virtual interface. This call lets enable or disable a network interface.",
   "method" : "POST",
   "params" : {
      "action" : {
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "up",
            "down"
         ]
      }
   },
   "url" : "/interfaces/virtual/<name>/actions"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/virtual-create.json ===

{
   "action" : "create",
   "description" : "Create a virtual interface.",
   "method" : "POST",
   "params" : {
      "ip" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))",
         "required" : "true"
      },
      "name" : {
         "format_msg" : "is a string formed with the parent interface name, colon (:) and a virtual interface tag. E.g: eth1:virt1",
         "non_blank" : "true",
         "regex" : "(?^:(?:(?^:[a-zA-Z0-9\\-]{1,15})|(?^:[a-zA-Z0-9\\-]{1,15}))(?:\\.(?^:\\d{1,4}))?:(?^:[a-zA-Z0-9\\-]{1,13}))",
         "required" : "true"
      }
   },
   "url" : "/interfaces/virtual"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/virtual-modify.json ===

{
   "action" : "set",
   "description" : "Modify the parameters of a virtual interface. name is the interface unique identifier.",
   "method" : "PUT",
   "params" : {
      "force" : {
         "non_blank" : "true",
         "values" : [
            "true"
         ]
      },
      "ip" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      }
   },
   "url" : "/interfaces/virtual/<name>"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/vlan-action.json ===

{
   "action" : "status",
   "description" : "Apply an action to a VLAN interface. This call lets enable or disable a network interface.",
   "method" : "POST",
   "params" : {
      "action" : {
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "up",
            "down"
         ]
      }
   },
   "url" : "/interfaces/vlan/<name>/actions"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/vlan-create.json ===

{
   "action" : "create",
   "description" : "Create a VLAN interface from a NIC or bonding interface. The new VLAN interface will share MAC, although the following network parameters must be different: ip, and the following can change: gateway, netmask.",
   "method" : "POST",
   "params" : {
      "dhcp" : {
         "edition" : "ee",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "gateway" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "ip" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "mac" : {
         "edition" : "ee",
         "regex" : "(?^:(?:(?^:(?:[A-Fa-f0-9]))(?^:(?:[A-Fa-f0-9]))\\:){5}(?^:(?:[A-Fa-f0-9]))(?^:(?:[A-Fa-f0-9])))"
      },
      "name" : {
         "format_msg" : "is a string formed with the parent interface name, dot (.) and a VLAN tag. E.g: eth1.1",
         "non_blank" : "true",
         "regex" : "(?^:[a-zA-Z0-9\\-]{1,13}\\.(?^:\\d{1,4}))",
         "required" : "true"
      },
      "netmask" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?:[0-9]{1,2}|10[0-9]|11[0-9]|12[0-8])))"
      }
   },
   "url" : "/interfaces/vlan"
}

=== ./background/relianoid/usr/local/relianoid/api-model/v4.0/json/vlan-modify.json ===

{
   "action" : "set",
   "description" : "Modify the parameters of a VLAN interface. name is the interface unique identifier.",
   "method" : "PUT",
   "params" : {
      "dhcp" : {
         "edition" : "ee",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "force" : {
         "non_blank" : "true",
         "values" : [
            "true"
         ]
      },
      "gateway" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "ip" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "mac" : {
         "edition" : "ee",
         "regex" : "(?^:(?:(?^:(?:[A-Fa-f0-9]))(?^:(?:[A-Fa-f0-9]))\\:){5}(?^:(?:[A-Fa-f0-9]))(?^:(?:[A-Fa-f0-9])))"
      },
      "netmask" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?:[0-9]{1,2}|10[0-9]|11[0-9]|12[0-8])))"
      }
   },
   "url" : "/interfaces/vlan/<name>"
}

=== ./background/relianoid/usr/local/relianoid/app/letsencrypt/etc/cherokee_localhost.conf ===

config!version = 001002104
server!bind!1!interface = 127.0.0.1
server!bind!1!port = 80
server!bind!1!tls = 0
server!ipv6 = 0
server!keepalive = 1
server!keepalive_max_requests = 500
server!panic_action = /usr/local/relianoid/app/cherokee/bin/cherokee_localhost-panic
server!pid_file = /usr/local/relianoid/app/cherokee/var/run/cherokee_localhost.pid
server!server_tokens = full
server!timeout = 60
server!tls = libssl
server!tls!protocol!SSLv2 = 0
server!user = root
vserver!1!directory_index = index.html
vserver!1!document_root = /opt/certs
vserver!1!error_writer!filename = /var/log/cherokee-error.log
vserver!1!error_writer!type = file
vserver!1!logger = combined
vserver!1!logger!access!buffsize = 16384
vserver!1!logger!access!filename = /var/log/cherokee-access.log
vserver!1!logger!access!type = file
vserver!1!nick = default
#vserver!1!rule!500!encoder!gzip = allow
#vserver!1!rule!500!encoder!gzip!compression_level = 9
vserver!1!rule!500!match = directory
vserver!1!rule!500!match!directory = /
vserver!1!rule!500!match!final = 0
vserver!1!rule!300!document_root = /usr/local/relianoid/app/letsencrypt/webroot/
#vserver!1!rule!300!encoder!gzip = allow
#vserver!1!rule!300!encoder!gzip!compression_level = 9
vserver!1!rule!300!handler = common
vserver!1!rule!300!handler!allow_dirlist = 0
vserver!1!rule!300!handler!allow_pathinfo = 0
vserver!1!rule!300!handler!iocache = 0
vserver!1!rule!300!match = or
vserver!1!rule!300!match!left = fullpath
vserver!1!rule!300!match!left!directory = /
vserver!1!rule!300!match!left!fullpath!1 = /index.html
vserver!1!rule!300!match!left!fullpath!2 = /
vserver!1!rule!300!match!left!request = ^$
vserver!1!rule!300!match!right = not
vserver!1!rule!300!match!right!right = request
vserver!1!rule!300!match!right!right!request = ^.*nothing.*
#vserver!1!rule!200!document_root = /usr/local/relianoid/app/letsencrypt/webroot/
#vserver!1!rule!200!handler = cgi
#vserver!1!rule!200!timeout = 60
#vserver!1!rule!200!handler!change_user = 0
#vserver!1!rule!200!handler!check_file = 1
#vserver!1!rule!200!handler!error_handler = 1
#vserver!1!rule!200!handler!pass_req_headers = 1
#vserver!1!rule!200!handler!xsendfile = 0
#vserver!1!rule!200!match = extensions
#vserver!1!rule!200!match!check_local_file = 0
#vserver!1!rule!200!match!extensions = cgi
#vserver!1!rule!100!match = default
vserver!1!ssl_certificate_file = /usr/local/relianoid/config/certificates/noid_ssl_cert.pem
vserver!1!ssl_certificate_key_file = /usr/local/relianoid/config/certificates/noid_ssl_cert.key
#vserver!1!ssl_cipher_server_preference = 1
#vserver!1!ssl_ciphers = HIGH:!aNULL:!MD5 
#vserver!1!ssl_ciphers = ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
vserver!1!ssl_compression = 1
icons!default = page_white.png
icons!directory = folder.png
icons!file!bomb.png = core
icons!file!page_white_go.png = *README*
icons!parent_directory = arrow_turn_left.png
icons!suffix!camera.png = jpg,jpeg,jpe
icons!suffix!cd.png = iso,ngr,cue
icons!suffix!color_wheel.png = png,gif,xcf,bmp,pcx,tiff,tif,cdr,psd,xpm,xbm
icons!suffix!control_play.png = bin,exe,com,msi,out
icons!suffix!css.png = css
icons!suffix!cup.png = java,class,jar
icons!suffix!email.png = eml,mbox,box,email,mbx
icons!suffix!film.png = avi,mpeg,mpe,mpg,mpeg3,dl,fli,qt,mov,movie,flv,webm
icons!suffix!font.png = ttf
icons!suffix!html.png = html,htm
icons!suffix!music.png = au,snd,mid,midi,kar,mpga,mpega,mp2,mp3,sid,wav,aif,aiff,aifc,gsm,m3u,wma,wax,ra,rm,ram,pls,sd2,ogg
icons!suffix!package.png = tar,gz,bz2,zip,rar,ace,lha,7z,dmg,cpk
icons!suffix!page_white_acrobat.png = pdf
icons!suffix!page_white_c.png = c,h,cpp
icons!suffix!page_white_office.png = doc,ppt,xls
icons!suffix!page_white_php.png = php
icons!suffix!page_white_text.png = txt,text,rtf,sdw
icons!suffix!printer.png = ps,eps
icons!suffix!ruby.png = rb
icons!suffix!script.png = sh,csh,ksh,tcl,tk,py,pl
mime!application/bzip2!extensions = bz2
mime!application/gzip!extensions = gz
mime!application/hta!extensions = hta
mime!application/java-archive!extensions = jar
mime!application/java-serialized-object!extensions = ser
mime!application/java-vm!extensions = class
mime!application/json!extensions = json
mime!application/mac-binhex40!extensions = hqx
mime!application/msaccess!extensions = mdb
mime!application/msword!extensions = doc,dot
mime!application/octet-stream!extensions = bin
mime!application/octetstream!extensions = ace
mime!application/oda!extensions = oda
mime!application/ogg!extensions = ogx
mime!application/pdf!extensions = pdf
mime!application/pgp-keys!extensions = key
mime!application/pgp-signature!extensions = pgp
mime!application/pics-rules!extensions = prf
mime!application/postscript!extensions = ps,ai,eps
mime!application/rar!extensions = rar
mime!application/rdf+xml!extensions = rdf
mime!application/rss+xml!extensions = rss
mime!application/smil!extensions = smi,smil
mime!application/vnd.mozilla.xul+xml!extensions = xul
mime!application/vnd.ms-excel!extensions = xls,xlb,xlt
mime!application/vnd.ms-pki.seccat!extensions = cat
mime!application/vnd.ms-pki.stl!extensions = stl
mime!application/vnd.ms-powerpoint!extensions = ppt,pps
mime!application/vnd.oasis.opendocument.chart!extensions = odc
mime!application/vnd.oasis.opendocument.database!extensions = odb
mime!application/vnd.oasis.opendocument.formula!extensions = odf
mime!application/vnd.oasis.opendocument.graphics!extensions = odg
mime!application/vnd.oasis.opendocument.image!extensions = odi
mime!application/vnd.oasis.opendocument.presentation!extensions = odp
mime!application/vnd.oasis.opendocument.spreadsheet!extensions = ods
mime!application/vnd.oasis.opendocument.text!extensions = odt
mime!application/vnd.oasis.opendocument.text-master!extensions = odm
mime!application/vnd.oasis.opendocument.text-web!extensions = oth
mime!application/vnd.pkg5.info!extensions = p5i
mime!application/vnd.visio!extensions = vsd
mime!application/vnd.wap.wbxml!extensions = wbxml
mime!application/vnd.wap.wmlc!extensions = wmlc
mime!application/vnd.wap.wmlscriptc!extensions = wmlsc
mime!application/x-7z-compressed!extensions = 7z
mime!application/x-abiword!extensions = abw
mime!application/x-apple-diskimage!extensions = dmg
mime!application/x-bcpio!extensions = bcpio
mime!application/x-bittorrent!extensions = torrent
mime!application/x-cdf!extensions = cdf
mime!application/x-cpio!extensions = cpio
mime!application/x-csh!extensions = csh
mime!application/x-debian-package!extensions = deb,udeb
mime!application/x-director!extensions = dcr,dir,dxr
mime!application/x-dvi!extensions = dvi
mime!application/x-flac!extensions = flac
mime!application/x-font!extensions = pfa,pfb,gsf,pcf,pcf.Z
mime!application/x-freemind!extensions = mm
mime!application/x-gnumeric!extensions = gnumeric
mime!application/x-gtar!extensions = gtar,tgz,taz
mime!application/x-gzip!extensions = gz,tgz
mime!application/x-httpd-php!extensions = phtml,pht,php
mime!application/x-httpd-php-source!extensions = phps
mime!application/x-httpd-php3!extensions = php3
mime!application/x-httpd-php3-preprocessed!extensions = php3p
mime!application/x-httpd-php4!extensions = php4
mime!application/x-internet-signup!extensions = ins,isp
mime!application/x-iphone!extensions = iii
mime!application/x-iso9660-image!extensions = iso
mime!application/x-java-jnlp-file!extensions = jnlp
mime!application/x-javascript!extensions = js
mime!application/x-kchart!extensions = chrt
mime!application/x-killustrator!extensions = kil
mime!application/x-koan!extensions = skp,skd,skt,skm
mime!application/x-kpresenter!extensions = kpr,kpt
mime!application/x-kspread!extensions = ksp
mime!application/x-kword!extensions = kwd,kwt
mime!application/x-latex!extensions = latex
mime!application/x-lha!extensions = lha
mime!application/x-lzh!extensions = lzh
mime!application/x-lzx!extensions = lzx
mime!application/x-ms-wmd!extensions = wmd
mime!application/x-ms-wmz!extensions = wmz
mime!application/x-msdos-program!extensions = com,exe,bat,dll
mime!application/x-msi!extensions = msi
mime!application/x-netcdf!extensions = nc
mime!application/x-ns-proxy-autoconfig!extensions = pac
mime!application/x-nwc!extensions = nwc
mime!application/x-object!extensions = o
mime!application/x-oz-application!extensions = oza
mime!application/x-pkcs7-certreqresp!extensions = p7r
mime!application/x-pkcs7-crl!extensions = crl
mime!application/x-python-code!extensions = pyc,pyo
mime!application/x-quicktimeplayer!extensions = qtl
mime!application/x-redhat-package-manager!extensions = rpm
mime!application/x-sh!extensions = sh
mime!application/x-shar!extensions = shar
mime!application/x-shockwave-flash!extensions = swf,swfl
mime!application/x-stuffit!extensions = sit,sea
mime!application/x-sv4cpio!extensions = sv4cpio
mime!application/x-sv4crc!extensions = sv4crc
mime!application/x-tar!extensions = tar
mime!application/x-tcl!extensions = tcl
mime!application/x-tex-pk!extensions = pk
mime!application/x-texinfo!extensions = texinfo,texi
mime!application/x-trash!extensions = ~,bak,old,sik
mime!application/x-troff!extensions = t,tr,roff
mime!application/x-troff-man!extensions = man
mime!application/x-troff-me!extensions = me
mime!application/x-troff-ms!extensions = ms
mime!application/x-ustar!extensions = ustar
mime!application/x-x509-ca-cert!extensions = crt
mime!application/x-xcf!extensions = xcf
mime!application/x-xfig!extensions = fig
mime!application/x-xpinstall!extensions = xpi
mime!application/xhtml+xml!extensions = xhtml,xht
mime!application/xml!extensions = xml,xsl
mime!application/zip!extensions = zip
mime!audio/basic!extensions = au,snd
mime!audio/midi!extensions = mid,midi,kar
mime!audio/mpeg!extensions = mpga,mpega,mp2,mp3,m4a
mime!audio/ogg!extensions = ogg,oga
mime!audio/prs.sid!extensions = sid
mime!audio/x-aiff!extensions = aif,aiff,aifc
mime!audio/x-gsm!extensions = gsm
mime!audio/x-mpegurl!extensions = m3u
mime!audio/x-ms-wax!extensions = wax
mime!audio/x-ms-wma!extensions = wma
mime!audio/x-pn-realaudio!extensions = ra,rm,ram
mime!audio/x-realaudio!extensions = ra
mime!audio/x-scpls!extensions = pls
mime!audio/x-sd2!extensions = sd2
mime!audio/x-wav!extensions = wav
mime!chemical/x-cache!extensions = cac,cache
mime!chemical/x-cache-csf!extensions = csf
mime!chemical/x-cdx!extensions = cdx
mime!chemical/x-cif!extensions = cif
mime!chemical/x-cmdf!extensions = cmdf
mime!chemical/x-cml!extensions = cml
mime!chemical/x-compass!extensions = cpa
mime!chemical/x-crossfire!extensions = bsd
mime!chemical/x-csml!extensions = csml,csm
mime!chemical/x-ctx!extensions = ctx
mime!chemical/x-cxf!extensions = cxf,cef
mime!chemical/x-isostar!extensions = istr,ist
mime!chemical/x-jcamp-dx!extensions = jdx,dx
mime!chemical/x-kinemage!extensions = kin
mime!chemical/x-pdb!extensions = pdb,ent
mime!chemical/x-swissprot!extensions = sw
mime!chemical/x-vamas-iso14976!extensions = vms
mime!chemical/x-vmd!extensions = vmd
mime!chemical/x-xtel!extensions = xtel
mime!chemical/x-xyz!extensions = xyz
mime!image/gif!extensions = gif
mime!image/jpeg!extensions = jpeg,jpg,jpe
mime!image/pcx!extensions = pcx
mime!image/png!extensions = png
mime!image/svg+xml!extensions = svg,svgz
mime!image/tiff!extensions = tiff,tif
mime!image/vnd.djvu!extensions = djvu,djv
mime!image/vnd.wap.wbmp!extensions = wbmp
mime!image/x-icon!extensions = ico
mime!image/x-ms-bmp!extensions = bmp
mime!image/x-photoshop!extensions = psd
mime!image/x-portable-anymap!extensions = pnm
mime!image/x-portable-bitmap!extensions = pbm
mime!image/x-portable-graymap!extensions = pgm
mime!image/x-portable-pixmap!extensions = ppm
mime!image/x-xbitmap!extensions = xbm
mime!image/x-xpixmap!extensions = xpm
mime!image/x-xwindowdump!extensions = xwd
mime!model/iges!extensions = igs,iges
mime!model/mesh!extensions = msh,mesh,silo
mime!model/vrml!extensions = wrl,vrml
mime!text/calendar!extensions = ics,icz
mime!text/comma-separated-values!extensions = csv
mime!text/css!extensions = css
mime!text/h323!extensions = 323
mime!text/html!extensions = html,htm,shtml
mime!text/iuls!extensions = uls
mime!text/mathml!extensions = mml
mime!text/plain!extensions = asc,txt,text,diff,pot
mime!text/richtext!extensions = rtx
mime!text/rtf!extensions = rtf
mime!text/scriptlet!extensions = sct,wsc
mime!text/tab-separated-values!extensions = tsv
mime!text/vnd.sun.j2me.app-descriptor!extensions = jad
mime!text/vnd.wap.wml!extensions = wml
mime!text/vnd.wap.wmlscript!extensions = wmls
mime!text/x-boo!extensions = boo
mime!text/x-c++hdr!extensions = h++,hpp,hxx,hh
mime!text/x-c++src!extensions = c++,cpp,cxx,cc
mime!text/x-chdr!extensions = h
mime!text/x-csh!extensions = csh
mime!text/x-csrc!extensions = c
mime!text/x-dsrc!extensions = d
mime!text/x-haskell!extensions = hs
mime!text/x-java!extensions = java
mime!text/x-literate-haskell!extensions = lhs
mime!text/x-moc!extensions = moc
mime!text/x-pascal!extensions = p,pas
mime!text/x-pcs-gcd!extensions = gcd
mime!text/x-perl!extensions = pl,pm
mime!text/x-python!extensions = py
mime!text/x-setext!extensions = etx
mime!text/x-sh!extensions = sh
mime!text/x-tcl!extensions = tcl,tk
mime!text/x-tex!extensions = tex,ltx,sty,cls
mime!text/x-vcalendar!extensions = vcs
mime!text/x-vcard!extensions = vcf
mime!video/dl!extensions = dl
mime!video/dv!extensions = dif,dv
mime!video/fli!extensions = fli
mime!video/gl!extensions = gl
mime!video/mp4!extensions = mp4
mime!video/mpeg!extensions = mpeg,mpg,mpe
mime!video/ogg!extensions = ogv
mime!video/quicktime!extensions = qt,mov
mime!video/vnd.mpegurl!extensions = mxu
mime!video/webm!extensions = webm
mime!video/x-flv!extensions = flv
mime!video/x-la-asf!extensions = lsf,lsx
mime!video/x-mng!extensions = mng
mime!video/x-ms-asf!extensions = asf,asx
mime!video/x-ms-wm!extensions = wm
mime!video/x-ms-wmv!extensions = wmv
mime!video/x-ms-wmx!extensions = wmx
mime!video/x-ms-wvx!extensions = wvx
mime!video/x-msvideo!extensions = avi
mime!video/x-sgi-movie!extensions = movie
mime!x-conference/x-cooltalk!extensions = ice
mime!x-world/x-vrml!extensions = vrm,vrml,wrl
admin!lang = en

=== ./background/relianoid/usr/local/relianoid/share/poundtpl.cfg ===

######################################################################
##GLOBAL OPTIONS
User		"root"
Group		"root"
Name		[DESC]
## allow PUT and DELETE also (by default only GET, POST and HEAD)?:
#ExtendedHTTP	0
## Logging: (goes to syslog by default)
##	0	no logging
##	1	normal
##	2	extended
##	3	Apache-style (common log format)
#LogFacility	local5
LogLevel 	5
## check timeouts:
Timeout		45
ConnTO		20
Alive		21
Client		30
ThreadModel	dynamic
Control 	"/tmp/[DESC]_proxy.socket"
Ignore100Continue 0
#DHParams 	"/usr/local/relianoid/app/pound/etc/dh2048.pem"
##ECDHCurve 	"prime256v1"


#HTTP(S) LISTENERS
ListenHTTP
	Err414 "[CONFIGDIR]/[DESC]_Err414.html"
	Err500 "[CONFIGDIR]/[DESC]_Err500.html"
	Err501 "[CONFIGDIR]/[DESC]_Err501.html"
	Err503 "[CONFIGDIR]/[DESC]_Err503.html"
	Address [IP]
	Port [PORT]
	xHTTP 4
	RewriteLocation 1

	#Cert "/usr/local/relianoid/config/certificates/noid_ssl_cert.pem"
	#Ciphers "ALL"
	#Disable SSLv3
	#SSLHonorCipherOrder 1
	#ZWACL-INI

	#ZWACL-END


	#Service "[DESC]"
		##False##HTTPS-backend##
		#DynScale 1
		#BackendCookie "NOIDSESSIONID" "" "/" 3600
		#HeadRequire "Host: "
		#Url ""
		#Redirect ""
		#StrictTransportSecurity 21600000
		#Session
			#Type nothing
			#TTL 120
			#ID "sessionname"
		#End
		#BackEnd

		#End
	#End


End

=== ./background/relianoid/usr/local/relianoid/share/relianoid_nameservers.conf ===

nameserver 1.1.1.1
nameserver 8.8.8.8

=== ./background/relianoid_adc/source_tree/.gitignore ===

/build-pkg
/workdir
/*.deb

=== ./background/relianoid_adc/source_tree/etc/default/grub.d/relianoid.cfg ===

GRUB_DISTRIBUTOR="RELIANOID ADC Community Edition"
GRUB_CMDLINE_LINUX_DEFAULT="net.ifnames=0 quiet"
GRUB_TERMINAL=console
GRUB_TIMEOUT=10
=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/certificate_csr-create.json ===

{
   "action" : "add",
   "description" : "Create a Certificate Signing Request (CSR file).",
   "method" : "POST",
   "params" : {
      "country" : {
         "description" : "The two-letter ISO code for the country where your organization is localized.",
         "non_blank" : "true",
         "required" : "true"
      },
      "division" : {
         "description" : "The division of your organization handling the certificate.",
         "non_blank" : "true",
         "required" : "true"
      },
      "fqdn" : {
         "description" : "The fully qualified domain name of your server.",
         "format_msg" : "FQDN is not valid. It must be as these examples: domain.com, mail.domain.com, or *.domain.com. Try again.",
         "non_blank" : "true",
         "required" : "true"
      },
      "locality" : {
         "description" : "The city where your organization is located.",
         "non_blank" : "true",
         "required" : "true"
      },
      "mail" : {
         "description" : "An email address used to contact your organization.",
         "non_blank" : "true",
         "required" : "true"
      },
      "name" : {
         "description" : "Certificate ID name.",
         "non_blank" : "true",
         "regex" : "(?^:[a-zA-Z0-9\\-]+)",
         "required" : "true"
      },
      "organization" : {
         "description" : "The legal name of your organization.",
         "non_blank" : "true",
         "required" : "true"
      },
      "state" : {
         "description" : "The state/region where your organization is located.",
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/certificates"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm-action.json ===

{
   "action" : "status",
   "description" : "Apply an action to a farm, see the Request parameters table for actions.",
   "method" : "PUT",
   "params" : {
      "action" : {
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "stop",
            "start",
            "restart"
         ]
      }
   },
   "url" : "/farms/<farmname>/actions"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm-create.json ===

{
   "action" : "create",
   "description" : "It creates a new farm.",
   "method" : "POST",
   "params" : {
      "copy_from" : {
         "description" : "This parameter expects the name of a farm that exists. If this parameter is sent, the farm is copied from the farm specified in it. The farmname, vip and vport values will be overwritten.",
         "format_msg" : "The farm name accepts alphabet letters, numbers or hypens (-).",
         "non_blank" : "true",
         "regex" : "(?^:[a-zA-Z0-9\\-]+)",
         "required" : "false"
      },
      "farmname" : {
         "description" : "Farm descriptive name. It is used as a unique identifier.",
         "exceptions" : [
            "0"
         ],
         "format_msg" : "The farm name accepts alphabet letters, numbers or hypens (-).",
         "non_blank" : "true",
         "regex" : "(?^:[a-zA-Z0-9\\-]+)",
         "required" : "true"
      },
      "profile" : {
         "description" : "The profile of the created Farm. For HTTP farms is http.",
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "http",
            "gslb",
            "l4xnat",
            "datalink",
            "eproxy"
         ]
      },
      "vip" : {
         "description" : "IP of the farm, where the virtual service is going to run. The indicated IP must be configured in the system and UP",
         "dyn_values" : "true",
         "required" : "true"
      },
      "vport" : {
         "depend_on" : "profile != datalink",
         "depend_on_msg" : "Mandatory if the profile is not datalink, else it is not expected",
         "description" : "Port of the farm where the virtual service is going to listen. The same virtual port and virtual IP must not be in use by another farm.",
         "format_msg" : "It expects a port number or multiport value for L4xnat farms",
         "non_blank" : "true",
         "regex" : "(?^:(?:\\*|(?:(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))|(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))\\:(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])))(?:,(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))|,(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))\\:(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])))*))"
      }
   },
   "url" : "/farms"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_certificate-add.json ===

{
   "action" : "add",
   "description" : "Include an available PEM Certificate to the SNI list or certlist array of an HTTP farm with an HTTPS listener.",
   "method" : "POST",
   "params" : {
      "file" : {
         "non_blank" : "true",
         "regex" : "(?^:(?^:(?:\\*[_|\\.])?\\w[\\w\\.\\(\\)\\@ \\-]*)\\.pem)",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/certificates"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_datalink-modify.json ===

{
   "action" : "set",
   "description" : "Modify the configuration of a datalink farm.",
   "method" : "PUT",
   "params" : {
      "algorithm" : {
         "non_blank" : "true",
         "values" : [
            "prio",
            "weight"
         ]
      },
      "newfarmname" : {
         "exceptions" : [
            "0"
         ],
         "non_blank" : "true",
         "regex" : "(?^:[a-zA-Z0-9\\-]+)"
      },
      "vip" : {
         "dyn_values" : "true",
         "format_msg" : "expects an IP",
         "non_blank" : "true"
      }
   },
   "url" : "/farm/<farmname>"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_datalink_service_backend-add.json ===

{
   "action" : "add",
   "description" : "Create a new Backend in a given datalink Farm.",
   "method" : "POST",
   "params" : {
      "interface" : {
         "non_blank" : "true",
         "required" : "true"
      },
      "ip" : {
         "format_msg" : "expects an IP",
         "non_blank" : "true",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))",
         "required" : "true"
      },
      "priority" : {
         "interval" : "1,9"
      },
      "weight" : {
         "interval" : "1,9"
      }
   },
   "url" : "/farms/<farmname>/backends"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_datalink_service_backend-modify.json ===

{
   "action" : "set",
   "description" : "Modify the parameters of a backend in for a datalink Farm. id is the backend unique identifier.",
   "method" : "PUT",
   "params" : {
      "interface" : {
         "non_blank" : "true"
      },
      "ip" : {
         "format_msg" : "expects an IP",
         "non_blank" : "true",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "priority" : {
         "interval" : "1,9"
      },
      "weight" : {
         "interval" : "1,9"
      }
   },
   "url" : "/farms/<farmname>/backends/<id>"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http-modify.json ===

{
   "action" : "set",
   "description" : "Modify the configuration of a http farm.",
   "method" : "PUT",
   "params" : {
      "certname" : {
         "depend_on" : "listener==https",
         "description" : "",
         "non_blank" : "true",
         "regex" : "(?^:(?^:(?:\\*[_|\\.])?\\w[\\w\\.\\(\\)\\@ \\-]*)\\.(?:pem|csr))"
      },
      "cipherc" : {
         "depend_on" : "listener==https, ciphers==customsecurity",
         "description" : "This is the allowed customized list of ciphers that will be accepted by the SSL connection, which it’s a string in the same format as in OpenSSL ciphers.",
         "non_blank" : "true"
      },
      "ciphers" : {
         "depend_on" : "listener==https",
         "description" : "It is used to build a list of ciphers accepted by SSL connections in order to harden the SSL connection.",
         "non_blank" : "true",
         "values" : [
            "all",
            "highsecurity",
            "customsecurity",
            "ssloffloading"
         ]
      },
      "contimeout" : {
         "description" : "How long the farm is going to wait for a connection to the backend in seconds.",
         "format_msg" : "expects a natural number",
         "non_blank" : "true",
         "regex" : "(?^:[1-9]\\d*)"
      },
      "disable_sslv2" : {
         "depend_on" : "listener==https",
         "description" : "Only in https listener. If this field has the value true the connections using an SSL security protocol with version 2 is not allowed; or false if the protocol SSLv2 is allowed.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "disable_sslv3" : {
         "depend_on" : "listener==https",
         "description" : "Only in https listener. If this field has the value true the connections using an SSL security protocol with version 3 is not allowed; or false if the protocol SSLv3 is allowed.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "disable_tlsv1" : {
         "depend_on" : "listener==https",
         "description" : "Only in https listener. If this field has the value true the connections using TLS security protocol with version 1 is not allowed; or false if the protocol TLSv1 is allowed.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "disable_tlsv1_1" : {
         "depend_on" : "listener==https",
         "description" : "Only in https listener. If this field has the value true the connections using TLS security protocol with version 1.1 is not allowed; or false if the protocol TLSv1.1 is allowed.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "disable_tlsv1_2" : {
         "depend_on" : "listener==https",
         "description" : "Only in https listener. If this field has the value true the connections using TLS security protocol with version 1.2 is not allowed; or false if the",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "error414" : {
         "description" : "",
         "required" : "false"
      },
      "error500" : {
         "description" : "Personalized message error 500.",
         "required" : "false"
      },
      "error501" : {
         "description" : "Personalized message error 501.",
         "required" : "false"
      },
      "error503" : {
         "description" : "Personalized message error 503.",
         "required" : "false"
      },
      "errorWAF" : {
         "description" : "Personalized message error 414.",
         "edition" : "ee"
      },
      "httpverb" : {
         "description" : "This field indicates the operations that will be permitted to the HTTP client requests. available values are: standardHTTP, accepted HTTP requests GET, POST, HEAD. extendedHTTP, accepted previous HTTP requests plus PUT,DELETE. optionsHTTP (from 4.0.1), add the OPTIONS verb to the previous ones. standardWebDAV, accepted previous HTTP requests plus LOCK, UNLOCK, PROPFIND, PROPPATCH, SEARCH, MKCOL, MOVE, COPY, OPTIONS, TRACE, MKACTIVITY, CHECKOUT, MERGE, REPORT, MSextWebDAV accepted previous HTTP requests plus SUBSCRIBE, UNSUBSCRIBE, NOTIFY, BPROPFIND, BPROPPATCH, POLL, BMOVE, BCOPY, BDELETE, CONNECT, or MSRPCext, accepted previous HTTP requests plus RPC_IN_DATA, RPC_OUT_DATA. Note that those values are case-sensitive.",
         "non_blank" : "true",
         "values" : [
            "standardHTTP",
            "extendedHTTP",
            "standardWebDAV",
            "MSextWebDAV",
            "MSRPCext",
            "optionsHTTP"
         ]
      },
      "ignore_100_continue" : {
         "description" : "If this field has the value true the 100 continue HTTP header will be ignored; if the value is false, the 100 continue header will be processed.",
         "edition" : "ee",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "listener" : {
         "description" : "A listener defines how the farm is going to play with the requests from the clients. The options are: http for not secured protocol or https for secured protocol.",
         "non_blank" : "true",
         "values" : [
            "http",
            "https"
         ]
      },
      "logs" : {
         "description" : "The farm Logs the trace of the HTTP connections. If this parameter has the value true, the logs are enabled; if it has the value false, logs are disabled.",
         "edition" : "ee",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "newfarmname" : {
         "depend_on" : "status==down",
         "depend_on_msg" : "The farm must be stopped.",
         "description" : "The ne farm name",
         "exceptions" : [
            "0"
         ],
         "non_blank" : "true",
         "regex" : "(?^:[a-zA-Z0-9\\-]+)"
      },
      "reqtimeout" : {
         "description" : "How long the farm is going to wait for a client request in seconds.",
         "format_msg" : "expects a natural number",
         "non_blank" : "true",
         "regex" : "(?^:[1-9]\\d*)"
      },
      "restimeout" : {
         "description" : "How long the farm is going to wait for a response from the backends in seconds.",
         "format_msg" : "expects a natural number",
         "non_blank" : "true",
         "regex" : "(?^:[1-9]\\d*)"
      },
      "resurrectime" : {
         "description" : "This value in seconds is the period to get out a blacklisted backend and checks if it is alive.",
         "format_msg" : "expects a natural number",
         "non_blank" : "true",
         "regex" : "(?^:[1-9]\\d*)"
      },
      "rewritelocation" : {
         "description" : "If it is enabled, the farm is forced to modify the Location: and Content-location: headers in responses to clients with the virtual host. The options are: enabled activated; disabled inactivated; or enabled-backends only the backend address is compared.",
         "non_blank" : "true",
         "values" : [
            "disabled",
            "enabled",
            "enabled-backends",
            "enabled-path",
            "enabled-backends-path"
         ]
      },
      "vip" : {
         "description" : "IP of the farm, where the virtual service is listening, this IP must be configured and up in the system.",
         "format_msg" : "expects an IP",
         "non_blank" : "true",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "vport" : {
         "description" : "Port of the farm, where the virtual service is listening.",
         "interval" : "1,65535",
         "non_blank" : "true"
      }
   },
   "url" : "/farm/<farmname>"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_header_request_add-create.json ===

{
   "action" : "add",
   "description" : "The farm will add the header to the backend request.",
   "method" : "POST",
   "params" : {
      "header" : {
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/addheader"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_header_request_add-modify.json ===

{
   "action" : "modify",
   "description" : "The farm will add the header to the backend request.",
   "method" : "PUT",
   "params" : {
      "header" : {
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/addheader/<id>"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_header_request_remove-create.json ===

{
   "action" : "add",
   "description" : "Remove certain headers from the incoming requests.",
   "method" : "POST",
   "params" : {
      "pattern" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/headremove"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_header_request_remove-modify.json ===

{
   "action" : "modify",
   "description" : "Remove certain headers from the incoming requests.",
   "method" : "PUT",
   "params" : {
      "pattern" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/headremove"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_header_request_replace-create.json ===

{
   "action" : "add",
   "description" : "Add rules to rewrite headers from the request.",
   "method" : "POST",
   "params" : {
      "header" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      },
      "match" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      },
      "replace" : {
         "negated_regex" : "(?^:\\n)",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/replacerequestheader"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_header_request_replace-modify.json ===

{
   "action" : "add",
   "description" : "Add rules to rewrite headers from the request.",
   "method" : "POST",
   "params" : {
      "header" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true"
      },
      "match" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true"
      },
      "replace" : {
         "negated_regex" : "(?^:\\n)"
      }
   },
   "url" : "/farms/<farmname>/replacerequestheader"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_header_request_replace-move.json ===

{
   "action" : "add",
   "description" : "Move a ReplaceHeader",
   "method" : "POST",
   "params" : {
      "position" : {
         "non_blank" : "true",
         "regex" : "(?^:\\d+)",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/replacerequestheader/<id>/actions"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_header_response_add-create.json ===

{
   "action" : "add",
   "description" : "The farm will add the header to the backend response.",
   "method" : "POST",
   "params" : {
      "header" : {
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/addresponseheader"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_header_response_add-modify.json ===

{
   "action" : "add",
   "description" : "The farm will add the header to the backend response.",
   "method" : "POST",
   "params" : {
      "header" : {
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/addresponseheader"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_header_response_remove-create.json ===

{
   "action" : "add",
   "description" : "Remove certain headers from the backend response.",
   "method" : "POST",
   "params" : {
      "pattern" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/removeresponseheader"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_header_response_remove-modify.json ===

{
   "action" : "add",
   "description" : "Remove certain headers from the backend response.",
   "method" : "POST",
   "params" : {
      "pattern" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/removeresponseheader"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_header_response_replace-create.json ===

{
   "action" : "add",
   "description" : "Add rules to rewrite headers from the response.",
   "method" : "POST",
   "params" : {
      "header" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      },
      "match" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      },
      "replace" : {
         "negated_regex" : "(?^:\\n)",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/replaceresponseheader"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_header_response_replace-modify.json ===

{
   "action" : "add",
   "description" : "Add rules to rewrite headers from the response.",
   "method" : "POST",
   "params" : {
      "header" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true"
      },
      "match" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true"
      },
      "replace" : {}
   },
   "url" : "/farms/<farmname>/replaceresponseheader"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_header_response_replace-move.json ===

{
   "action" : "add",
   "description" : "Move a ReplaceHeader",
   "method" : "POST",
   "params" : {
      "position" : {
         "non_blank" : "true",
         "regex" : "(?^:\\d+)",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/replaceresponseheader/<id>/actions"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_service-create.json ===

{
   "action" : "add",
   "description" : "Create a service in a given HTTP profile Farm.",
   "method" : "POST",
   "params" : {
      "id" : {
         "exceptions" : [
            "0"
         ],
         "non_blank" : "true",
         "regex" : "(?^:[a-zA-Z0-9\\-]+)"
      }
   },
   "url" : "/farms/<farmname>/services"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_service-modify.json ===

{
   "action" : "set",
   "description" : "Modify the parameters of a service in an HTTP profile.",
   "method" : "PUT",
   "params" : {
      "cookiedomain" : {
         "edition" : "ee"
      },
      "cookieinsert" : {
         "edition" : "ee",
         "values" : [
            "true",
            "false"
         ]
      },
      "cookiename" : {
         "edition" : "ee"
      },
      "cookiepath" : {
         "edition" : "ee"
      },
      "cookiettl" : {
         "edition" : "ee",
         "non_blank" : "true",
         "regex" : "(?^:[1-9]\\d*)"
      },
      "httpsb" : {
         "non_blank" : "true",
         "regex" : "(?^:(?:true|false))"
      },
      "leastresp" : {
         "non_blank" : "true",
         "regex" : "(?^:(?:true|false))"
      },
      "persistence" : {
         "non_blank" : "false",
         "values" : [
            "IP",
            "BASIC",
            "NONE",
            "URL",
            "PARM",
            "COOKIE",
            "HEADER"
         ]
      },
      "pinnedconnection" : {
         "non_blank" : "true",
         "values" : [
            0,
            1
         ]
      },
      "redirect" : {
         "non_blank" : "false",
         "regex" : "(?^:(http|https)://([^/]+)(.*))"
      },
      "redirect_code" : {
         "edition" : "ee",
         "values" : [
            301,
            302,
            307
         ]
      },
      "redirecttype" : {
         "values" : [
            "default",
            "append"
         ]
      },
      "rewritelocation" : {
         "non_blank" : "true",
         "values" : [
            "disabled",
            "enabled",
            "enabled-backends",
            "enabled-path",
            "enabled-backends-path"
         ]
      },
      "routingpolicy" : {
         "non_blank" : "true",
         "values" : [
            "ROUND_ROBIN",
            "LEAST_CONNECTIONS",
            "RESPONSE_TIME",
            "PENDING_CONNECTIONS"
         ]
      },
      "sessionid" : {},
      "sts_status" : {
         "edition" : "ee",
         "values" : [
            "true",
            "false"
         ]
      },
      "sts_timeout" : {
         "edition" : "ee",
         "regex" : "(?^:(?:\\d+))"
      },
      "ttl" : {
         "non_blank" : "true",
         "regex" : "(?^:[1-9]\\d*)"
      },
      "urlp" : {
         "is_regex" : "true"
      },
      "vhost" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:^\\^)"
      }
   },
   "url" : "/farms/<farmname>/services/<id>"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_service_backend-add.json ===

{
   "action" : "add",
   "description" : "Create a new Backend in a given HTTP profile. id is the service unique identifier.",
   "method" : "POST",
   "params" : {
      "connection_limit" : {
         "depend_on" : "proxy_ng==true",
         "interval" : "0,"
      },
      "ip" : {
         "format_msg" : "expects an IP",
         "non_blank" : "true",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))",
         "required" : "true"
      },
      "port" : {
         "non_blank" : "true",
         "regex" : "(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))",
         "required" : "true"
      },
      "priority" : {
         "depend_on" : "proxy_ng==true",
         "interval" : "1,9"
      },
      "timeout" : {
         "regex" : "(?^:[1-9]\\d*)"
      },
      "weight" : {
         "interval" : "1,9"
      }
   },
   "url" : "/farms/<farmname>/services/<id>/backends"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_service_backend-maintenance.json ===

{
   "action" : "maintenance",
   "description" : "Set a given action in a backend of an HTTP farm.",
   "method" : "PUT",
   "params" : {
      "action" : {
         "depend_on_msg" : "The farm cannot be in need_restart status to set maintenance",
         "non_blank" : "true",
         "values" : [
            "up",
            "maintenance"
         ]
      },
      "mode" : {
         "depend_on" : "action==maintenance",
         "non_blank" : "true",
         "values" : [
            "drain",
            "cut"
         ]
      }
   },
   "url" : "/farms/<farmname>/services/<id>/backends/<id>/maintenance"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_service_backend-modify.json ===

{
   "action" : "set",
   "description" : "Modify the parameters of a backend HTTP service.",
   "method" : "PUT",
   "params" : {
      "connection_limit" : {
         "depend_on" : "proxy_ng==true",
         "interval" : "0,"
      },
      "ip" : {
         "format_msg" : "expects an IP",
         "non_blank" : "true",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "port" : {
         "non_blank" : "true",
         "regex" : "(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))"
      },
      "priority" : {
         "depend_on" : "proxy_ng==true",
         "interval" : "1,9"
      },
      "timeout" : {
         "regex" : "(?^:[1-9]\\d*)"
      },
      "weight" : {
         "interval" : "1,9"
      }
   },
   "url" : "/farms/<farmname>/services/<id>/backends/<id>"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_service_url_rewrite-create.json ===

{
   "action" : "add",
   "description" : "It checks a pattern in order to get strings from URL and replace them.",
   "method" : "POST",
   "params" : {
      "last" : {
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "pattern" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true",
         "required" : "true"
      },
      "replace" : {
         "negated_regex" : "(?^:\\n)",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/service/<servicename>/rewriteurl"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_service_url_rewrite-modify.json ===

{
   "action" : "add",
   "description" : "It checks a pattern in order to get strings from URL and replace them.",
   "method" : "POST",
   "params" : {
      "last" : {
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "pattern" : {
         "is_regex" : "true",
         "negated_regex" : "(?^:\\n)",
         "non_blank" : "true"
      },
      "replace" : {
         "negated_regex" : "(?^:\\n)"
      }
   },
   "url" : "/farms/<farmname>/service/<servicename>/rewriteurl"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_http_service_url_rewrite-move.json ===

{
   "action" : "move",
   "description" : "It checks a pattern in order to get strings from URL and replace them.",
   "method" : "POST",
   "params" : {
      "position" : {
         "non_blank" : "true",
         "regex" : "(?^:\\d+)",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/service/<servicename>/rewriteurl/<id>/actions"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_l4xnat-modify.json ===

{
   "action" : "set",
   "description" : "Modify the configuration of a l4xnat farm.",
   "method" : "PUT",
   "params" : {
      "algorithm" : {
         "non_blank" : "true",
         "values" : [
            "weight",
            "roundrobin",
            "hash_srcip_srcport",
            "hash_srcip",
            "symhash",
            "leastconn"
         ]
      },
      "logs" : {
         "edition" : "ee",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "nattype" : {
         "non_blank" : "true",
         "values" : [
            "nat",
            "dnat",
            "dsr",
            "stateless_dnat"
         ]
      },
      "newfarmname" : {
         "exceptions" : [
            "0"
         ],
         "non_blank" : "true",
         "regex" : "(?^:[a-zA-Z0-9\\-]+)"
      },
      "persistence" : {
         "values" : [
            "ip",
            "srcip",
            "srcport",
            "srcmac",
            "srcip_srcport",
            "srcip_dstport",
            "none"
         ]
      },
      "protocol" : {
         "non_blank" : "true",
         "values" : [
            "all",
            "tcp",
            "udp",
            "sctp",
            "sip",
            "ftp",
            "tftp",
            "amanda",
            "h323",
            "irc",
            "netbios-ns",
            "pptp",
            "sane",
            "snmp"
         ]
      },
      "ttl" : {
         "non_blank" : "true",
         "regex" : "(?^:[1-9]\\d*)"
      },
      "vip" : {
         "dyn_values" : "true",
         "format_msg" : "The vip IP must exist in some interface.",
         "non_blank" : "true"
      },
      "vport" : {
         "non_blank" : "true"
      }
   },
   "url" : "/farm/<farmname>"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_l4xnat_service_backend-add.json ===

{
   "action" : "add",
   "description" : "Create a new Backend in a given L4xNAT Farm.",
   "method" : "POST",
   "params" : {
      "ip" : {
         "format_msg" : "expects an IP",
         "non_blank" : "true",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))",
         "required" : "true"
      },
      "max_conns" : {
         "interval" : "0,"
      },
      "port" : {
         "format_msg" : "expects a port or port range",
         "regex" : "(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))"
      },
      "priority" : {
         "interval" : "1,9"
      },
      "weight" : {
         "interval" : "1,9"
      }
   },
   "url" : "/farms/<farmname>/backends"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_l4xnat_service_backend-maintenance.json ===

{
   "action" : "maintenance",
   "description" : "Set a given action in a backend of an L4xNAT farm.",
   "method" : "PUT",
   "params" : {
      "action" : {
         "non_blank" : "true",
         "values" : [
            "up",
            "maintenance"
         ]
      },
      "mode" : {
         "depend_on" : "action==maintenance",
         "non_blank" : "true",
         "values" : [
            "drain",
            "cut"
         ]
      }
   },
   "url" : "/farms/<farmname>/backends/<id>/maintenance"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farm_l4xnat_service_backend-modify.json ===

{
   "action" : "set",
   "description" : "Modify the parameters of a backend in for a L4xNAT Farm. id is the backend unique identifier.",
   "method" : "PUT",
   "params" : {
      "interface" : {
         "non_blank" : "true"
      },
      "ip" : {
         "format_msg" : "expects an IP",
         "non_blank" : "true",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "max_conns" : {
         "interval" : "0,"
      },
      "port" : {
         "regex" : "(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))"
      },
      "priority" : {
         "interval" : "1,9"
      },
      "weight" : {
         "interval" : "1,9"
      }
   },
   "url" : "/farms/<farmname>/backends/<id>"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farmguardian-create.json ===

{
   "action" : "create",
   "description" : "Create a monitoring check to evaluate the farm service status.",
   "method" : "POST",
   "params" : {
      "copy_from" : {
         "regex" : "(?^:[\\w-]+)"
      },
      "name" : {
         "exceptions" : [
            "0"
         ],
         "non_blank" : "true",
         "regex" : "(?^:[\\w-]+)",
         "required" : "true"
      }
   },
   "url" : "/monitoring/fg"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farmguardian-modify.json ===

{
   "action" : "set",
   "description" : "Modify the parameters of the health check",
   "method" : "PUT",
   "params" : {
      "backend_alias" : {
         "non_blank" : "false",
         "values" : [
            "true",
            "false"
         ]
      },
      "command" : {
         "non_blank" : "true"
      },
      "cut_conns" : {
         "non_blank" : "false",
         "values" : [
            "true",
            "false"
         ]
      },
      "description" : {
         "non_blank" : "true"
      },
      "force" : {
         "non_blank" : "false",
         "values" : [
            "true",
            "false"
         ]
      },
      "interval" : {
         "regex" : "(?^:[1-9]\\d*)"
      },
      "log" : {
         "non_blank" : "false",
         "values" : [
            "true",
            "false"
         ]
      },
      "timeout" : {
         "regex" : "(?^:[1-9]\\d*)"
      }
   },
   "url" : "/monitoring/fg/<name>"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/farmguardian_to_farm-add.json ===

{
   "action" : "add",
   "description" : "Apply a FarmGuardian to a service.",
   "method" : "POST",
   "params" : {
      "name" : {
         "non_blank" : "true",
         "required" : "true"
      }
   },
   "url" : "/farms/<farmname>/services/<id>/fg"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/gateway-modify.json ===

{
   "action" : "set",
   "description" : "Modify the configuration of the gateway interface.",
   "method" : "PUT",
   "params" : {
      "address" : {
         "non_blank" : "true",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "interface" : {
         "non_blank" : "true"
      }
   },
   "url" : "/interfaces/gateway/<ip_version>"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/letsencrypt-action.json ===

{
   "action" : "action",
   "description" : "Apply an action in a Letsencrypt certificate by first domain.",
   "method" : "POST",
   "params" : {
      "action" : {
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "renew"
         ]
      },
      "farmname" : {
         "description" : "Farm name which a temporal Service “LetsEncryptTemporalFarm” is configured in. Required if param vip is not sent.",
         "dyn_values" : "true",
         "non_blank" : "true"
      },
      "force_renewal" : {
         "description" : "true, force the certificate to be renewed even it is not expired, false, the certificate will be renewed if it is due to be renewed ( less than 30 days to expire ).",
         "values" : [
            "true",
            "false"
         ]
      },
      "restart" : {
         "description" : "true, all the farms using the certificate will be restarted. false, no farms using the certificate will be restarted.",
         "values" : [
            "true",
            "false"
         ]
      },
      "vip" : {
         "description" : "IP of the system, where a temporal Farm “LetsEncryptTemporalFarm” is configured. Required true if param vip is not sent.",
         "dyn_values" : "true",
         "non_blank" : "true"
      }
   },
   "url" : "/certificates/letsencrypt/<domain>/actions"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/letsencrypt-create.json ===

{
   "action" : "renew",
   "description" : "Create a new Letsencrypt certificate.",
   "method" : "POST",
   "params" : {
      "domains" : {
         "description" : "List of domains which the certificate is vaild for.",
         "ref" : "ARRAY",
         "required" : "true"
      },
      "farmname" : {
         "description" : "Farm name which a temporal Service Letsencryptz is configured in.",
         "dyn_values" : "true",
         "non_blank" : "true"
      },
      "force" : {
         "description" : "This parameter is used get a confirmation before creating a certificate.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "test" : {
         "description" : "true, the certificate is issued by LetsEncrypt Staging Server. false, the certificate is issued by LetsEncrypt Server and it will valid for Production environment.",
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "vip" : {
         "description" : "IP of the system, where a temporal Farm Letsencryptz is configured.",
         "dyn_values" : "true",
         "non_blank" : "true"
      }
   },
   "url" : "/certificates/letsencrypt"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/letsencrypt-modify.json ===

{
   "action" : "set",
   "description" : "Modify the Auto Renewal parameters of a Letsencrypt certificate.",
   "method" : "PUT",
   "params" : {
      "autorenewal" : {
         "description" : "true,the autorenewal will be configured.false, the autorenewal will be removed.",
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "farmname" : {
         "depend_on" : "autorenewal==true && vip!=defined",
         "description" : "Farm name which a temporal Service “LetsEncryptTemporalFarm” is configured in. Required if param vip is not sent.",
         "dyn_values" : "true",
         "non_blank" : "true"
      },
      "force_renewal" : {
         "depend_on" : "autorenewal==true",
         "description" : "true, force the certificate to be renewed even it is not expired, false, the certificate will be renewed if it is due to be renewed ( less than 30 days to expire ).",
         "required" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "restart" : {
         "depend_on" : "autorenewal==true",
         "description" : "true, all the farms using the certificate will be restarted. false, no farms using the certificate will be restarted.",
         "required" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "vip" : {
         "depend_on" : "autorenewal==true && farmname!=defined",
         "description" : "IP of the system, where a temporal Farm “LetsEncryptTemporalFarm” is configured. Required true if param vip is not sent.",
         "dyn_values" : "true",
         "non_blank" : "true"
      }
   },
   "url" : "/certificates/letsencrypt/<domain>"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/letsencrypt_config-modify.json ===

{
   "action" : "set",
   "description" : "Modify Letsencrypt Configuration.",
   "method" : "PUT",
   "params" : {
      "email" : {
         "description" : "Email for use as a contact in Letsencrypt",
         "non_blank" : "true",
         "regex" : "(?^:^(?:[a-zA-Z][\\w\\_\\.]+)\\@(?:[a-zA-Z0-9.-]+)\\.(?:[a-zA-Z]{2,4})$)",
         "required" : "true"
      }
   },
   "url" : "/certificates/letsencrypt/config"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/nic-action.json ===

{
   "action" : "status",
   "description" : "Apply an action to a NIC interface. This call lets enable or disable a network interface.",
   "method" : "POST",
   "params" : {
      "action" : {
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "up",
            "down"
         ]
      }
   },
   "url" : "/interfaces/nic/<name>/actions"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/nic-modify.json ===

{
   "action" : "set",
   "description" : "Modify the parameters of a NIC interface. name is the interface unique identifier.",
   "method" : "PUT",
   "params" : {
      "dhcp" : {
         "edition" : "ee",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "force" : {
         "non_blank" : "true",
         "values" : [
            "true"
         ]
      },
      "gateway" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "ip" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "netmask" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?:[0-9]{1,2}|10[0-9]|11[0-9]|12[0-8])))"
      }
   },
   "url" : "/interfaces/nic/<name>"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/system_backup-create.json ===

{
   "action" : "create",
   "description" : "Create a system configuration backup of the current configuration.",
   "method" : "POST",
   "params" : {
      "name" : {
         "description" : "It is the file name used as a unique identifier. The file extension is .tar.gz.",
         "non_blank" : "true",
         "regex" : "(?^:[\\w-]+)",
         "required" : "true"
      }
   },
   "url" : "/system/backup"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/system_backup-restore.json ===

{
   "action" : "apply",
   "description" : "Restore the configuration from a backup file. Name is the backup unique identifier.",
   "method" : "POST",
   "params" : {
      "action" : {
         "description" : "To restore the backup configuration, the value must be apply.",
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "apply"
         ]
      },
      "force" : {
         "description" : "This parameter is used get a confirmation before applying the backup.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      }
   },
   "url" : "/system/backup/<name>/actions"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/system_dns-modify.json ===

{
   "action" : "set",
   "description" : "Modify the DNS service configuration.",
   "method" : "POST",
   "params" : {
      "primary" : {
         "description" : "Primary DNS configurated in the system.",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "secondary" : {
         "description" : "Secondary DNS configurated in the system.",
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      }
   },
   "url" : "/system/dns"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/system_factory-apply.json ===

{
   "action" : "factory",
   "description" : "Apply a factory reset in the system. It will delete all the user configuration. The root password, the hostname, one NIC interface and the certificate will not be modified. The system will be restarted while the process is going on.",
   "method" : "POST",
   "params" : {
      "force" : {
         "description" : "It is a confirmation about to apply the factory reset. This parameter has to be sent with true value for applying it.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "interface" : {
         "description" : "It is a NIC interface name. This interface will not be deleted in the factory reset process. The system will be available before factory reset through this interface.",
         "dyn_values" : "true",
         "non_blank" : "true",
         "required" : "true"
      },
      "remove_backups" : {
         "description" : "It is an option about remove all system backups. They will not be removed by default. If this parameter is set to true, the backups will be removed.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      }
   },
   "url" : "/system/factory"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/system_global-modify.json ===

{
   "action" : "set",
   "description" : "Modify RELIANOID global Settings.",
   "method" : "POST",
   "params" : {
      "arp_announce" : {
         "description" : "If this parameter is enabled true, the master node of the cluster will send a ARP packet to the network per minute and when the system boots. If the value is false the packet will be sent only when cluster switches to master or when a interface will be configurated.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "duplicated_network" : {
         "description" : "If this parameter is enabled true, the system will able to manage networks duplicated in different interfaces, a process will ensure that an interface does not route through another with the same netwoking. This can be disabled with the value false.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "force" : {
         "description" : "This parameter is used to force the settings when these require a service restart. This parameter accepts the value true.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "ssyncd" : {
         "description" : "Session synchronization daemon is which replies the client sessions between master and backup nodes for a cluster. This feature is enabled with the value true and disabled with false.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "waf_assistant" : {
         "description" : "If this parameter is enabled true, the system will assist the user with WAF settings of the farms.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      }
   },
   "url" : "/system/global"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/system_language-modify.json ===

{
   "action" : "factory",
   "description" : "Modify the WebGUI language.",
   "method" : "POST",
   "params" : {
      "language" : {
         "description" : "string with the language used in webgui.",
         "required" : "true"
      }
   },
   "url" : "/system/factory"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/system_ntp-modify.json ===

{
   "action" : "set",
   "description" : "Modify the NTP service configuration.",
   "method" : "POST",
   "params" : {
      "server" : {
         "description" : "Server where NTP client does the requests.",
         "non_blank" : "true",
         "regex" : "(?^:[\\w\\.\\-]+)",
         "required" : "true"
      }
   },
   "url" : "/system/ntp"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/system_proxy-modify.json ===

{
   "action" : "set",
   "description" : "Show the configuration about HTTP/HTTPS remote services. This proxy will be used to the remote HTTP request from the load balancer (as downloading IPDS rules and getting packages updates).",
   "method" : "POST",
   "params" : {
      "http_proxy" : {
         "description" : "It is the URL to the remote proxy server to send the requests that use the HTTP protocol, without SSL encryption.",
         "regex" : "(?^:\\S*)"
      },
      "https_proxy" : {
         "description" : "It is the URL to the remote proxy server to send the requests that use the HTTPS protocol, with SSL encryption.",
         "regex" : "(?^:\\S*)"
      }
   },
   "url" : "/system/proxy"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/system_snmp-modify.json ===

{
   "action" : "set",
   "description" : "Modify the SNMP service configuration.",
   "method" : "POST",
   "params" : {
      "community" : {
         "description" : "Community name. Read-Only Community used.",
         "length" : 32,
         "non_blank" : "true"
      },
      "ip" : {
         "description" : "Interface IP where the SNMP service is running. It’s safe to keep the All interfaces enabled using the character *.",
         "dyn_values" : "true",
         "non_blank" : "true"
      },
      "port" : {
         "description" : "Port where SNMP service is running.",
         "non_blank" : "true",
         "regex" : "(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))"
      },
      "scope" : {
         "description" : "IP or subnet with access (IP/bit). Allowed client IPs to access SNMPD service, in case you want to allow access only one IP please use the bit /32.",
         "non_blank" : "true",
         "regex" : "(?^:(?:\\d{1,3}\\.){3}\\d{1,3}\\/\\d{1,2})"
      },
      "status" : {
         "description" : "Status of SNMP service. The possible values are: true, the service is running; or false, the service is stopped.",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      }
   },
   "url" : "/system/snmp"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/system_ssh-modify.json ===

{
   "action" : "set",
   "description" : "Modify the SSH service configuration.",
   "method" : "POST",
   "params" : {
      "listen" : {
         "description" : "IP of the system where the SSH service is listening. The character * is used to listen in all configurated IPs. Enabled to set an array to configure multiple ips.",
         "non_blank" : "true",
         "ref" : "array|none",
         "regex" : "(?^:(?:(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))|\\*))"
      },
      "port" : {
         "description" : "Port configurated for SSH service. Enabled to set an array to configure multiple ports.",
         "non_blank" : "true",
         "ref" : "array|none",
         "regex" : "(?^:(?:[1-9]\\d{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))"
      }
   },
   "url" : "/system/ssh"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/system_user-modify.json ===

{
   "action" : "set",
   "description" : "Modify the configuration of the current user. The current user is authenticated with the API_KEY or logged in the WebGUI.",
   "method" : "POST",
   "params" : {
      "api_key" : {
         "description" : "Each user can have an API key. With this API key, the user can do action through the API key with the permissions of the user’s role.",
         "regex" : "(?^:[a-zA-Z0-9]+)"
      },
      "api_permissions" : {
         "description" : "The possible values are: true, to enable the access to the load balancer through the API; or false, to deny the access through the API.",
         "non_blank" : "true",
         "regex" : "(?^:(?:true|false))"
      },
      "newpassword" : {
         "description" : "New user password to access through the WebGUI.",
         "format_msg" : "must contain at least a letter and a number and a minimum length of 8 characters.",
         "non_blank" : "true",
         "regex" : "(?^:(?=.*[0-9])(?=.*[a-zA-Z]).{8,512})"
      },
      "password" : {
         "description" : "It is the current user password. It is required when newpassword is sent.",
         "non_blank" : "true"
      },
      "zapi_permissions" : {
         "description" : "The possible values are: true, to enable the access to the load balancer through the API; or false, to deny the access through the API. This parameter is deprecated and it will be removed, use `api_permissions` instead.",
         "non_blank" : "true",
         "regex" : "(?^:(?:true|false))"
      },
      "zapikey" : {
         "description" : "Each user can have an API key. With this API key, the user can do action through the API key with the permissions of the user’s role. This parameter is deprecated and it will be removed, use `api_key` instead.",
         "regex" : "(?^:[a-zA-Z0-9]+)"
      }
   },
   "url" : "/system/users"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/virtual-action.json ===

{
   "action" : "status",
   "description" : "Apply an action to a virtual interface. This call lets enable or disable a network interface.",
   "method" : "POST",
   "params" : {
      "action" : {
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "up",
            "down"
         ]
      }
   },
   "url" : "/interfaces/virtual/<name>/actions"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/virtual-create.json ===

{
   "action" : "create",
   "description" : "Create a virtual interface.",
   "method" : "POST",
   "params" : {
      "ip" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))",
         "required" : "true"
      },
      "name" : {
         "format_msg" : "is a string formed with the parent interface name, colon (:) and a virtual interface tag. E.g: eth1:virt1",
         "non_blank" : "true",
         "regex" : "(?^:(?:(?^:[a-zA-Z0-9\\-]{1,15})|(?^:[a-zA-Z0-9\\-]{1,15}))(?:\\.(?^:\\d{1,4}))?:(?^:[a-zA-Z0-9\\-]{1,13}))",
         "required" : "true"
      }
   },
   "url" : "/interfaces/virtual"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/virtual-modify.json ===

{
   "action" : "set",
   "description" : "Modify the parameters of a virtual interface. name is the interface unique identifier.",
   "method" : "PUT",
   "params" : {
      "force" : {
         "non_blank" : "true",
         "values" : [
            "true"
         ]
      },
      "ip" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      }
   },
   "url" : "/interfaces/virtual/<name>"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/vlan-action.json ===

{
   "action" : "status",
   "description" : "Apply an action to a VLAN interface. This call lets enable or disable a network interface.",
   "method" : "POST",
   "params" : {
      "action" : {
         "non_blank" : "true",
         "required" : "true",
         "values" : [
            "up",
            "down"
         ]
      }
   },
   "url" : "/interfaces/vlan/<name>/actions"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/vlan-create.json ===

{
   "action" : "create",
   "description" : "Create a VLAN interface from a NIC or bonding interface. The new VLAN interface will share MAC, although the following network parameters must be different: ip, and the following can change: gateway, netmask.",
   "method" : "POST",
   "params" : {
      "dhcp" : {
         "edition" : "ee",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "gateway" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "ip" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "mac" : {
         "edition" : "ee",
         "regex" : "(?^:(?:(?^:(?:[A-Fa-f0-9]))(?^:(?:[A-Fa-f0-9]))\\:){5}(?^:(?:[A-Fa-f0-9]))(?^:(?:[A-Fa-f0-9])))"
      },
      "name" : {
         "format_msg" : "is a string formed with the parent interface name, dot (.) and a VLAN tag. E.g: eth1.1",
         "non_blank" : "true",
         "regex" : "(?^:[a-zA-Z0-9\\-]{1,13}\\.(?^:\\d{1,4}))",
         "required" : "true"
      },
      "netmask" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?:[0-9]{1,2}|10[0-9]|11[0-9]|12[0-8])))"
      }
   },
   "url" : "/interfaces/vlan"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/api-model/v4.0/json/vlan-modify.json ===

{
   "action" : "set",
   "description" : "Modify the parameters of a VLAN interface. name is the interface unique identifier.",
   "method" : "PUT",
   "params" : {
      "dhcp" : {
         "edition" : "ee",
         "non_blank" : "true",
         "values" : [
            "true",
            "false"
         ]
      },
      "force" : {
         "non_blank" : "true",
         "values" : [
            "true"
         ]
      },
      "gateway" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "ip" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?^::(?::[0-9a-fA-F]{1,4}){0,5}(?:(?::[0-9a-fA-F]{1,4}){1,2}|:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})))|[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}:(?:[0-9a-fA-F]{1,4}|:)|(?::(?:[0-9a-fA-F]{1,4})?|(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))))|:(?:(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|[0-9a-fA-F]{1,4}(?::[0-9a-fA-F]{1,4})?|))|(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|:[0-9a-fA-F]{1,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){0,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,2}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,3}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:))|(?:(?::[0-9a-fA-F]{1,4}){0,4}(?::(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))|(?::[0-9a-fA-F]{1,4}){1,2})|:)))))"
      },
      "mac" : {
         "edition" : "ee",
         "regex" : "(?^:(?:(?^:(?:[A-Fa-f0-9]))(?^:(?:[A-Fa-f0-9]))\\:){5}(?^:(?:[A-Fa-f0-9]))(?^:(?:[A-Fa-f0-9])))"
      },
      "netmask" : {
         "regex" : "(?^:(?:(?^:(?:(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0)\\.){3}(?:25[0-5]|2[0-4]\\d|(?!0)[1]?\\d\\d?|0))|(?:[0-9]{1,2}|10[0-9]|11[0-9]|12[0-8])))"
      }
   },
   "url" : "/interfaces/vlan/<name>"
}

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/app/letsencrypt/etc/cherokee_localhost.conf ===

config!version = 001002104
server!bind!1!interface = 127.0.0.1
server!bind!1!port = 80
server!bind!1!tls = 0
server!ipv6 = 0
server!keepalive = 1
server!keepalive_max_requests = 500
server!panic_action = /usr/local/relianoid/app/cherokee/bin/cherokee_localhost-panic
server!pid_file = /usr/local/relianoid/app/cherokee/var/run/cherokee_localhost.pid
server!server_tokens = full
server!timeout = 60
server!tls = libssl
server!tls!protocol!SSLv2 = 0
server!user = root
vserver!1!directory_index = index.html
vserver!1!document_root = /opt/certs
vserver!1!error_writer!filename = /var/log/cherokee-error.log
vserver!1!error_writer!type = file
vserver!1!logger = combined
vserver!1!logger!access!buffsize = 16384
vserver!1!logger!access!filename = /var/log/cherokee-access.log
vserver!1!logger!access!type = file
vserver!1!nick = default
#vserver!1!rule!500!encoder!gzip = allow
#vserver!1!rule!500!encoder!gzip!compression_level = 9
vserver!1!rule!500!match = directory
vserver!1!rule!500!match!directory = /
vserver!1!rule!500!match!final = 0
vserver!1!rule!300!document_root = /usr/local/relianoid/app/letsencrypt/webroot/
#vserver!1!rule!300!encoder!gzip = allow
#vserver!1!rule!300!encoder!gzip!compression_level = 9
vserver!1!rule!300!handler = common
vserver!1!rule!300!handler!allow_dirlist = 0
vserver!1!rule!300!handler!allow_pathinfo = 0
vserver!1!rule!300!handler!iocache = 0
vserver!1!rule!300!match = or
vserver!1!rule!300!match!left = fullpath
vserver!1!rule!300!match!left!directory = /
vserver!1!rule!300!match!left!fullpath!1 = /index.html
vserver!1!rule!300!match!left!fullpath!2 = /
vserver!1!rule!300!match!left!request = ^$
vserver!1!rule!300!match!right = not
vserver!1!rule!300!match!right!right = request
vserver!1!rule!300!match!right!right!request = ^.*nothing.*
#vserver!1!rule!200!document_root = /usr/local/relianoid/app/letsencrypt/webroot/
#vserver!1!rule!200!handler = cgi
#vserver!1!rule!200!timeout = 60
#vserver!1!rule!200!handler!change_user = 0
#vserver!1!rule!200!handler!check_file = 1
#vserver!1!rule!200!handler!error_handler = 1
#vserver!1!rule!200!handler!pass_req_headers = 1
#vserver!1!rule!200!handler!xsendfile = 0
#vserver!1!rule!200!match = extensions
#vserver!1!rule!200!match!check_local_file = 0
#vserver!1!rule!200!match!extensions = cgi
#vserver!1!rule!100!match = default
vserver!1!ssl_certificate_file = /usr/local/relianoid/config/certificates/noid_ssl_cert.pem
vserver!1!ssl_certificate_key_file = /usr/local/relianoid/config/certificates/noid_ssl_cert.key
#vserver!1!ssl_cipher_server_preference = 1
#vserver!1!ssl_ciphers = HIGH:!aNULL:!MD5 
#vserver!1!ssl_ciphers = ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
vserver!1!ssl_compression = 1
icons!default = page_white.png
icons!directory = folder.png
icons!file!bomb.png = core
icons!file!page_white_go.png = *README*
icons!parent_directory = arrow_turn_left.png
icons!suffix!camera.png = jpg,jpeg,jpe
icons!suffix!cd.png = iso,ngr,cue
icons!suffix!color_wheel.png = png,gif,xcf,bmp,pcx,tiff,tif,cdr,psd,xpm,xbm
icons!suffix!control_play.png = bin,exe,com,msi,out
icons!suffix!css.png = css
icons!suffix!cup.png = java,class,jar
icons!suffix!email.png = eml,mbox,box,email,mbx
icons!suffix!film.png = avi,mpeg,mpe,mpg,mpeg3,dl,fli,qt,mov,movie,flv,webm
icons!suffix!font.png = ttf
icons!suffix!html.png = html,htm
icons!suffix!music.png = au,snd,mid,midi,kar,mpga,mpega,mp2,mp3,sid,wav,aif,aiff,aifc,gsm,m3u,wma,wax,ra,rm,ram,pls,sd2,ogg
icons!suffix!package.png = tar,gz,bz2,zip,rar,ace,lha,7z,dmg,cpk
icons!suffix!page_white_acrobat.png = pdf
icons!suffix!page_white_c.png = c,h,cpp
icons!suffix!page_white_office.png = doc,ppt,xls
icons!suffix!page_white_php.png = php
icons!suffix!page_white_text.png = txt,text,rtf,sdw
icons!suffix!printer.png = ps,eps
icons!suffix!ruby.png = rb
icons!suffix!script.png = sh,csh,ksh,tcl,tk,py,pl
mime!application/bzip2!extensions = bz2
mime!application/gzip!extensions = gz
mime!application/hta!extensions = hta
mime!application/java-archive!extensions = jar
mime!application/java-serialized-object!extensions = ser
mime!application/java-vm!extensions = class
mime!application/json!extensions = json
mime!application/mac-binhex40!extensions = hqx
mime!application/msaccess!extensions = mdb
mime!application/msword!extensions = doc,dot
mime!application/octet-stream!extensions = bin
mime!application/octetstream!extensions = ace
mime!application/oda!extensions = oda
mime!application/ogg!extensions = ogx
mime!application/pdf!extensions = pdf
mime!application/pgp-keys!extensions = key
mime!application/pgp-signature!extensions = pgp
mime!application/pics-rules!extensions = prf
mime!application/postscript!extensions = ps,ai,eps
mime!application/rar!extensions = rar
mime!application/rdf+xml!extensions = rdf
mime!application/rss+xml!extensions = rss
mime!application/smil!extensions = smi,smil
mime!application/vnd.mozilla.xul+xml!extensions = xul
mime!application/vnd.ms-excel!extensions = xls,xlb,xlt
mime!application/vnd.ms-pki.seccat!extensions = cat
mime!application/vnd.ms-pki.stl!extensions = stl
mime!application/vnd.ms-powerpoint!extensions = ppt,pps
mime!application/vnd.oasis.opendocument.chart!extensions = odc
mime!application/vnd.oasis.opendocument.database!extensions = odb
mime!application/vnd.oasis.opendocument.formula!extensions = odf
mime!application/vnd.oasis.opendocument.graphics!extensions = odg
mime!application/vnd.oasis.opendocument.image!extensions = odi
mime!application/vnd.oasis.opendocument.presentation!extensions = odp
mime!application/vnd.oasis.opendocument.spreadsheet!extensions = ods
mime!application/vnd.oasis.opendocument.text!extensions = odt
mime!application/vnd.oasis.opendocument.text-master!extensions = odm
mime!application/vnd.oasis.opendocument.text-web!extensions = oth
mime!application/vnd.pkg5.info!extensions = p5i
mime!application/vnd.visio!extensions = vsd
mime!application/vnd.wap.wbxml!extensions = wbxml
mime!application/vnd.wap.wmlc!extensions = wmlc
mime!application/vnd.wap.wmlscriptc!extensions = wmlsc
mime!application/x-7z-compressed!extensions = 7z
mime!application/x-abiword!extensions = abw
mime!application/x-apple-diskimage!extensions = dmg
mime!application/x-bcpio!extensions = bcpio
mime!application/x-bittorrent!extensions = torrent
mime!application/x-cdf!extensions = cdf
mime!application/x-cpio!extensions = cpio
mime!application/x-csh!extensions = csh
mime!application/x-debian-package!extensions = deb,udeb
mime!application/x-director!extensions = dcr,dir,dxr
mime!application/x-dvi!extensions = dvi
mime!application/x-flac!extensions = flac
mime!application/x-font!extensions = pfa,pfb,gsf,pcf,pcf.Z
mime!application/x-freemind!extensions = mm
mime!application/x-gnumeric!extensions = gnumeric
mime!application/x-gtar!extensions = gtar,tgz,taz
mime!application/x-gzip!extensions = gz,tgz
mime!application/x-httpd-php!extensions = phtml,pht,php
mime!application/x-httpd-php-source!extensions = phps
mime!application/x-httpd-php3!extensions = php3
mime!application/x-httpd-php3-preprocessed!extensions = php3p
mime!application/x-httpd-php4!extensions = php4
mime!application/x-internet-signup!extensions = ins,isp
mime!application/x-iphone!extensions = iii
mime!application/x-iso9660-image!extensions = iso
mime!application/x-java-jnlp-file!extensions = jnlp
mime!application/x-javascript!extensions = js
mime!application/x-kchart!extensions = chrt
mime!application/x-killustrator!extensions = kil
mime!application/x-koan!extensions = skp,skd,skt,skm
mime!application/x-kpresenter!extensions = kpr,kpt
mime!application/x-kspread!extensions = ksp
mime!application/x-kword!extensions = kwd,kwt
mime!application/x-latex!extensions = latex
mime!application/x-lha!extensions = lha
mime!application/x-lzh!extensions = lzh
mime!application/x-lzx!extensions = lzx
mime!application/x-ms-wmd!extensions = wmd
mime!application/x-ms-wmz!extensions = wmz
mime!application/x-msdos-program!extensions = com,exe,bat,dll
mime!application/x-msi!extensions = msi
mime!application/x-netcdf!extensions = nc
mime!application/x-ns-proxy-autoconfig!extensions = pac
mime!application/x-nwc!extensions = nwc
mime!application/x-object!extensions = o
mime!application/x-oz-application!extensions = oza
mime!application/x-pkcs7-certreqresp!extensions = p7r
mime!application/x-pkcs7-crl!extensions = crl
mime!application/x-python-code!extensions = pyc,pyo
mime!application/x-quicktimeplayer!extensions = qtl
mime!application/x-redhat-package-manager!extensions = rpm
mime!application/x-sh!extensions = sh
mime!application/x-shar!extensions = shar
mime!application/x-shockwave-flash!extensions = swf,swfl
mime!application/x-stuffit!extensions = sit,sea
mime!application/x-sv4cpio!extensions = sv4cpio
mime!application/x-sv4crc!extensions = sv4crc
mime!application/x-tar!extensions = tar
mime!application/x-tcl!extensions = tcl
mime!application/x-tex-pk!extensions = pk
mime!application/x-texinfo!extensions = texinfo,texi
mime!application/x-trash!extensions = ~,bak,old,sik
mime!application/x-troff!extensions = t,tr,roff
mime!application/x-troff-man!extensions = man
mime!application/x-troff-me!extensions = me
mime!application/x-troff-ms!extensions = ms
mime!application/x-ustar!extensions = ustar
mime!application/x-x509-ca-cert!extensions = crt
mime!application/x-xcf!extensions = xcf
mime!application/x-xfig!extensions = fig
mime!application/x-xpinstall!extensions = xpi
mime!application/xhtml+xml!extensions = xhtml,xht
mime!application/xml!extensions = xml,xsl
mime!application/zip!extensions = zip
mime!audio/basic!extensions = au,snd
mime!audio/midi!extensions = mid,midi,kar
mime!audio/mpeg!extensions = mpga,mpega,mp2,mp3,m4a
mime!audio/ogg!extensions = ogg,oga
mime!audio/prs.sid!extensions = sid
mime!audio/x-aiff!extensions = aif,aiff,aifc
mime!audio/x-gsm!extensions = gsm
mime!audio/x-mpegurl!extensions = m3u
mime!audio/x-ms-wax!extensions = wax
mime!audio/x-ms-wma!extensions = wma
mime!audio/x-pn-realaudio!extensions = ra,rm,ram
mime!audio/x-realaudio!extensions = ra
mime!audio/x-scpls!extensions = pls
mime!audio/x-sd2!extensions = sd2
mime!audio/x-wav!extensions = wav
mime!chemical/x-cache!extensions = cac,cache
mime!chemical/x-cache-csf!extensions = csf
mime!chemical/x-cdx!extensions = cdx
mime!chemical/x-cif!extensions = cif
mime!chemical/x-cmdf!extensions = cmdf
mime!chemical/x-cml!extensions = cml
mime!chemical/x-compass!extensions = cpa
mime!chemical/x-crossfire!extensions = bsd
mime!chemical/x-csml!extensions = csml,csm
mime!chemical/x-ctx!extensions = ctx
mime!chemical/x-cxf!extensions = cxf,cef
mime!chemical/x-isostar!extensions = istr,ist
mime!chemical/x-jcamp-dx!extensions = jdx,dx
mime!chemical/x-kinemage!extensions = kin
mime!chemical/x-pdb!extensions = pdb,ent
mime!chemical/x-swissprot!extensions = sw
mime!chemical/x-vamas-iso14976!extensions = vms
mime!chemical/x-vmd!extensions = vmd
mime!chemical/x-xtel!extensions = xtel
mime!chemical/x-xyz!extensions = xyz
mime!image/gif!extensions = gif
mime!image/jpeg!extensions = jpeg,jpg,jpe
mime!image/pcx!extensions = pcx
mime!image/png!extensions = png
mime!image/svg+xml!extensions = svg,svgz
mime!image/tiff!extensions = tiff,tif
mime!image/vnd.djvu!extensions = djvu,djv
mime!image/vnd.wap.wbmp!extensions = wbmp
mime!image/x-icon!extensions = ico
mime!image/x-ms-bmp!extensions = bmp
mime!image/x-photoshop!extensions = psd
mime!image/x-portable-anymap!extensions = pnm
mime!image/x-portable-bitmap!extensions = pbm
mime!image/x-portable-graymap!extensions = pgm
mime!image/x-portable-pixmap!extensions = ppm
mime!image/x-xbitmap!extensions = xbm
mime!image/x-xpixmap!extensions = xpm
mime!image/x-xwindowdump!extensions = xwd
mime!model/iges!extensions = igs,iges
mime!model/mesh!extensions = msh,mesh,silo
mime!model/vrml!extensions = wrl,vrml
mime!text/calendar!extensions = ics,icz
mime!text/comma-separated-values!extensions = csv
mime!text/css!extensions = css
mime!text/h323!extensions = 323
mime!text/html!extensions = html,htm,shtml
mime!text/iuls!extensions = uls
mime!text/mathml!extensions = mml
mime!text/plain!extensions = asc,txt,text,diff,pot
mime!text/richtext!extensions = rtx
mime!text/rtf!extensions = rtf
mime!text/scriptlet!extensions = sct,wsc
mime!text/tab-separated-values!extensions = tsv
mime!text/vnd.sun.j2me.app-descriptor!extensions = jad
mime!text/vnd.wap.wml!extensions = wml
mime!text/vnd.wap.wmlscript!extensions = wmls
mime!text/x-boo!extensions = boo
mime!text/x-c++hdr!extensions = h++,hpp,hxx,hh
mime!text/x-c++src!extensions = c++,cpp,cxx,cc
mime!text/x-chdr!extensions = h
mime!text/x-csh!extensions = csh
mime!text/x-csrc!extensions = c
mime!text/x-dsrc!extensions = d
mime!text/x-haskell!extensions = hs
mime!text/x-java!extensions = java
mime!text/x-literate-haskell!extensions = lhs
mime!text/x-moc!extensions = moc
mime!text/x-pascal!extensions = p,pas
mime!text/x-pcs-gcd!extensions = gcd
mime!text/x-perl!extensions = pl,pm
mime!text/x-python!extensions = py
mime!text/x-setext!extensions = etx
mime!text/x-sh!extensions = sh
mime!text/x-tcl!extensions = tcl,tk
mime!text/x-tex!extensions = tex,ltx,sty,cls
mime!text/x-vcalendar!extensions = vcs
mime!text/x-vcard!extensions = vcf
mime!video/dl!extensions = dl
mime!video/dv!extensions = dif,dv
mime!video/fli!extensions = fli
mime!video/gl!extensions = gl
mime!video/mp4!extensions = mp4
mime!video/mpeg!extensions = mpeg,mpg,mpe
mime!video/ogg!extensions = ogv
mime!video/quicktime!extensions = qt,mov
mime!video/vnd.mpegurl!extensions = mxu
mime!video/webm!extensions = webm
mime!video/x-flv!extensions = flv
mime!video/x-la-asf!extensions = lsf,lsx
mime!video/x-mng!extensions = mng
mime!video/x-ms-asf!extensions = asf,asx
mime!video/x-ms-wm!extensions = wm
mime!video/x-ms-wmv!extensions = wmv
mime!video/x-ms-wmx!extensions = wmx
mime!video/x-ms-wvx!extensions = wvx
mime!video/x-msvideo!extensions = avi
mime!video/x-sgi-movie!extensions = movie
mime!x-conference/x-cooltalk!extensions = ice
mime!x-world/x-vrml!extensions = vrm,vrml,wrl
admin!lang = en

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/share/poundtpl.cfg ===

######################################################################
##GLOBAL OPTIONS
User		"root"
Group		"root"
Name		[DESC]
## allow PUT and DELETE also (by default only GET, POST and HEAD)?:
#ExtendedHTTP	0
## Logging: (goes to syslog by default)
##	0	no logging
##	1	normal
##	2	extended
##	3	Apache-style (common log format)
#LogFacility	local5
LogLevel 	5
## check timeouts:
Timeout		45
ConnTO		20
Alive		21
Client		30
ThreadModel	dynamic
Control 	"/tmp/[DESC]_proxy.socket"
Ignore100Continue 0
#DHParams 	"/usr/local/relianoid/app/pound/etc/dh2048.pem"
##ECDHCurve 	"prime256v1"


#HTTP(S) LISTENERS
ListenHTTP
	Err414 "[CONFIGDIR]/[DESC]_Err414.html"
	Err500 "[CONFIGDIR]/[DESC]_Err500.html"
	Err501 "[CONFIGDIR]/[DESC]_Err501.html"
	Err503 "[CONFIGDIR]/[DESC]_Err503.html"
	Address [IP]
	Port [PORT]
	xHTTP 4
	RewriteLocation 1

	#Cert "/usr/local/relianoid/config/certificates/noid_ssl_cert.pem"
	#Ciphers "ALL"
	#Disable SSLv3
	#SSLHonorCipherOrder 1
	#ZWACL-INI

	#ZWACL-END


	#Service "[DESC]"
		##False##HTTPS-backend##
		#DynScale 1
		#BackendCookie "NOIDSESSIONID" "" "/" 3600
		#HeadRequire "Host: "
		#Url ""
		#Redirect ""
		#StrictTransportSecurity 21600000
		#Session
			#Type nothing
			#TTL 120
			#ID "sessionname"
		#End
		#BackEnd

		#End
	#End


End

=== ./background/relianoid_adc/source_tree/usr/local/relianoid/share/relianoid_nameservers.conf ===

nameserver 1.1.1.1
nameserver 8.8.8.8
